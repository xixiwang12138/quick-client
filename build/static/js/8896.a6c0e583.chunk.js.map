{"version":3,"file":"static/js/8896.a6c0e583.chunk.js","mappings":"4NA+BA,MAmDA,EAnDoBA,IAIC,IAJA,eACnBC,EAAc,WACdC,EAAU,2BACVC,GACaH,EACb,MAAMI,GAAWC,EAAAA,EAAAA,OAQVC,EAAeC,IAAmBC,EAAAA,EAAAA,IAPpBC,IAAMN,GAA2B,KAClCO,IAClBN,GAASO,EAAAA,EAAAA,IAAqBD,IAC9BP,GAA2B,EAAM,IAMnC,IAAKF,EACH,OAAO,KAET,MAMMW,EAAeX,EAAeY,KAAKC,IACvCC,EAAAA,EAAAA,KAAA,OAAAC,UACED,EAAAA,EAAAA,KAAA,KAAAC,SAAIF,KADIA,KAKZ,OACEC,EAAAA,EAAAA,KAACE,EAAAA,EAAa,CACZC,MAAK,eAAAC,OAAiBlB,EAAemB,OAAS,EAAI,IAAM,IACxDC,YAAa,SACbC,OAAQpB,EACRqB,WAAWR,EAAAA,EAAAA,KAACS,EAAAA,IAAiB,IAC7BC,UAAWnB,EACXoB,UAnBmBC,KACrB,IAAK,IAAIb,KAASb,EAChBM,EAAgB,SAAS,iBAADY,QAAmBS,EAAAA,EAAAA,IAAgBd,IAC7D,EAiBEe,QA3BYA,IAAM1B,GAA2B,GA4B7C2B,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAhB,SAAA,CAAC,gDACsC,IACnB,IAA1Bf,EAAemB,OAAe,GAAKnB,EAAemB,OAAO,SACzDnB,EAAemB,OAAS,EAAI,KAAO,IACnCR,MAGL,C","sources":["screens/Console/Groups/DeleteGroup.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { encodeURLString } from \"../../../common/utils\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\nimport useApi from \"../Common/Hooks/useApi\";\n\ninterface IDeleteGroup {\n  selectedGroups: string[];\n  deleteOpen: boolean;\n  closeDeleteModalAndRefresh: any;\n}\n\nconst DeleteGroup = ({\n  selectedGroups,\n  deleteOpen,\n  closeDeleteModalAndRefresh,\n}: IDeleteGroup) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) => {\n    dispatch(setErrorSnackMessage(err));\n    closeDeleteModalAndRefresh(false);\n  };\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!selectedGroups) {\n    return null;\n  }\n  const onDeleteGroups = () => {\n    for (let group of selectedGroups) {\n      invokeDeleteApi(\"DELETE\", `/api/v1/group/${encodeURLString(group)}`);\n    }\n  };\n\n  const renderGroups = selectedGroups.map((group) => (\n    <div key={group}>\n      <b>{group}</b>\n    </div>\n  ));\n\n  return (\n    <ConfirmDialog\n      title={`Delete Group${selectedGroups.length > 1 ? \"s\" : \"\"}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onDeleteGroups}\n      onClose={onClose}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete the following{\" \"}\n          {selectedGroups.length === 1 ? \"\" : selectedGroups.length} group\n          {selectedGroups.length > 1 ? \"s?\" : \"?\"}\n          {renderGroups}\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteGroup;\n"],"names":["_ref","selectedGroups","deleteOpen","closeDeleteModalAndRefresh","dispatch","useAppDispatch","deleteLoading","invokeDeleteApi","useApi","onDelSuccess","err","setErrorSnackMessage","renderGroups","map","group","_jsx","children","ConfirmDialog","title","concat","length","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onDeleteGroups","encodeURLString","onClose","confirmationContent","_jsxs","Fragment"],"sourceRoot":""}