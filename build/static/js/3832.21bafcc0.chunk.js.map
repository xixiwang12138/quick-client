{"version":3,"file":"static/js/3832.21bafcc0.chunk.js","mappings":"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","sources":["screens/Console/Logs/ErrorLogs/LogLine.tsx","screens/Console/Logs/ErrorLogs/ErrorLogs.tsx","../node_modules/es5-ext/global.js","../node_modules/websocket/lib/browser.js","../node_modules/websocket/lib/version.js"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport { DateTime } from \"luxon\";\nimport { LogMessage } from \"../types\";\nimport {\n  Box,\n  BoxArrowDown,\n  BoxArrowUp,\n  TableCell,\n  TableRow,\n  WarnFilledIcon,\n} from \"mds\";\n\nimport getByKey from \"lodash/get\";\n\nconst timestampDisplayFmt = \"HH:mm:ss ZZZZ MM/dd/yyyy\"; //make this same as server logs format.\nconst messageForConsoleMsg = (log: LogMessage) => {\n  // regex for terminal colors like e.g. `[31;4m `\n  const tColorRegex = /((\\[[0-9;]+m))/g;\n\n  let fullMessage = log.ConsoleMsg;\n  // remove the 0x1B character\n  /* eslint-disable no-control-regex */\n  fullMessage = fullMessage.replace(/\\x1B/g, \" \");\n  /* eslint-enable no-control-regex */\n  // get substring if there was a match for to split what\n  // is going to be colored and what not, here we add color\n  // only to the first match.\n  fullMessage = fullMessage.replace(tColorRegex, \"\");\n  return (\n    <div\n      style={{\n        display: \"table\",\n        tableLayout: \"fixed\",\n        width: \"100%\",\n        paddingLeft: 10,\n        paddingRight: 10,\n      }}\n    >\n      <div\n        style={{\n          display: \"table-cell\",\n          whiteSpace: \"nowrap\",\n          textOverflow: \"ellipsis\",\n          overflowX: \"auto\",\n        }}\n      >\n        <pre>{fullMessage}</pre>\n      </div>\n    </div>\n  );\n};\nconst messageForError = (log: LogMessage) => {\n  const dataStyle = {\n    color: \"#C83B51\",\n    fontWeight: 400,\n    fontFamily: \"monospace\",\n    fontSize: \"12px\",\n  };\n  const labelStyle = {\n    fontFamily: \"monospace\",\n    fontSize: \"12px\",\n  };\n\n  const getLogEntryKey = (keyPath: string) => {\n    return getByKey(log, keyPath, \"\");\n  };\n\n  const logTime = DateTime.fromFormat(\n    log.time.toString(),\n    \"HH:mm:ss z MM/dd/yyyy\",\n    {\n      zone: \"UTC\",\n    },\n  );\n  return (\n    <Fragment>\n      <div>\n        <b style={labelStyle}>API:&nbsp;</b>\n        <span style={dataStyle}>{getLogEntryKey(\"api.name\")}</span>\n      </div>\n      <div>\n        <b style={labelStyle}>Time:&nbsp;</b>\n        <span style={dataStyle}>{logTime.toFormat(timestampDisplayFmt)}</span>\n      </div>\n      <div>\n        <b style={labelStyle}>DeploymentID:&nbsp;</b>\n        <span style={dataStyle}>{getLogEntryKey(\"deploymentid\")}</span>\n      </div>\n      <div>\n        <b style={labelStyle}>RequestID:&nbsp;</b>\n        <span style={dataStyle}>{getLogEntryKey(\"requestID\")}</span>\n      </div>\n      <div>\n        <b style={labelStyle}>RemoteHost:&nbsp;</b>\n        <span style={dataStyle}>{getLogEntryKey(\"remotehost\")}</span>\n      </div>\n      <div>\n        <b style={labelStyle}>UserAgent:&nbsp;</b>\n        <span style={dataStyle}>{getLogEntryKey(\"userAgent\")}</span>\n      </div>\n      <div>\n        <b style={labelStyle}>Error:&nbsp;</b>\n        <span style={dataStyle}>{getLogEntryKey(\"error.message\")}</span>\n      </div>\n      <br />\n      <div>\n        <b style={labelStyle}>Backtrace:&nbsp;</b>\n      </div>\n\n      {(log.error.source || []).map((e: any, i: number) => {\n        return (\n          <div>\n            <b style={labelStyle}>{i}:&nbsp;</b>\n            <span style={dataStyle}>{e}</span>\n          </div>\n        );\n      })}\n    </Fragment>\n  );\n};\n\nconst LogLine = (props: { log: LogMessage }) => {\n  const { log } = props;\n  const [open, setOpen] = useState<boolean>(false);\n\n  const getLogLineKey = (keyPath: string) => {\n    return getByKey(log, keyPath, \"\");\n  };\n\n  let logMessage = \"\";\n  let consoleMsg = getLogLineKey(\"ConsoleMsg\");\n  let errMsg = getLogLineKey(\"error.message\");\n  if (consoleMsg !== \"\") {\n    logMessage = consoleMsg;\n  } else if (errMsg !== \"\") {\n    logMessage = errMsg;\n  }\n  // remove any non ascii characters, exclude any control codes\n  let titleLogMessage = (logMessage || \"\").replace(/━|┏|┓|┃|┗|┛/g, \"\");\n  // remove any non ascii characters, exclude any control codes\n  titleLogMessage = titleLogMessage.replace(/([^\\x20-\\x7F])/g, \"\");\n\n  // regex for terminal colors like e.g. `[31;4m `\n  const tColorRegex = /((\\[[0-9;]+m))/g;\n\n  let fullMessage = <Fragment />;\n  if (consoleMsg !== \"\") {\n    fullMessage = messageForConsoleMsg(log);\n  } else if (errMsg !== \"\") {\n    fullMessage = messageForError(log);\n  }\n\n  titleLogMessage = (titleLogMessage || \"\").replace(tColorRegex, \"\");\n\n  const logTime = DateTime.fromFormat(\n    log.time.toString(),\n    \"HH:mm:ss z MM/dd/yyyy\",\n    {\n      zone: \"UTC\",\n    },\n  );\n  const dateOfLine = logTime.toJSDate(); //DateTime.fromJSDate(log.time);\n\n  let dateStr = <Fragment>{logTime.toFormat(timestampDisplayFmt)}</Fragment>;\n\n  if (dateOfLine.getFullYear() === 1) {\n    dateStr = <Fragment>n/a</Fragment>;\n  }\n\n  return (\n    <React.Fragment key={logTime.toString()}>\n      <TableRow\n        sx={{\n          cursor: \"pointer\",\n          borderLeft: \"0\",\n          borderRight: \"0\",\n        }}\n      >\n        <TableCell\n          onClick={() => setOpen(!open)}\n          sx={{ width: 280, color: \"#989898\", fontSize: 12 }}\n        >\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: 1,\n              alignItems: \"center\",\n\n              \"& .min-icon\": { width: 12, marginRight: 1 },\n              fontWeight: \"bold\",\n              lineHeight: 1,\n            }}\n          >\n            <WarnFilledIcon />\n            <div>{dateStr}</div>\n          </Box>\n        </TableCell>\n        <TableCell\n          onClick={() => setOpen(!open)}\n          sx={{ width: 200, color: \"#989898\", fontSize: 12 }}\n        >\n          <Box\n            sx={{\n              \"& .min-icon\": { width: 12, marginRight: 1 },\n              fontWeight: \"bold\",\n              lineHeight: 1,\n            }}\n          >\n            {log.errKind}\n          </Box>\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)}>\n          <Box\n            sx={{\n              display: \"table\",\n              tableLayout: \"fixed\",\n              width: \"100%\",\n              paddingLeft: 10,\n              paddingRight: 10,\n            }}\n          >\n            <Box\n              sx={{\n                display: \"table-cell\",\n                whiteSpace: \"nowrap\",\n                textOverflow: \"ellipsis\",\n                overflow: \"hidden\",\n              }}\n            >\n              {titleLogMessage}\n            </Box>\n          </Box>\n        </TableCell>\n        <TableCell onClick={() => setOpen(!open)} sx={{ width: 40 }}>\n          <Box\n            sx={{\n              \"& .min-icon\": {\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                borderRadius: \"2px\",\n              },\n              \"&:hover .min-icon\": {\n                fill: \"#eaeaea\",\n              },\n            }}\n          >\n            {open ? <BoxArrowUp /> : <BoxArrowDown />}\n          </Box>\n        </TableCell>\n      </TableRow>\n      {open ? (\n        <TableRow>\n          <TableCell\n            sx={{\n              paddingBottom: 0,\n              paddingTop: 0,\n              width: 200,\n              textTransform: \"uppercase\",\n              verticalAlign: \"top\",\n              textAlign: \"right\",\n              color: \"#8399AB\",\n              fontWeight: \"bold\",\n            }}\n          >\n            <Box sx={{ marginTop: 10 }}>Log Details</Box>\n          </TableCell>\n          <TableCell sx={{ paddingBottom: 0, paddingTop: 0 }} colSpan={2}>\n            <Box\n              sx={{\n                margin: 1,\n                padding: 4,\n                fontSize: 14,\n              }}\n              withBorders\n              useBackground\n            >\n              {fullMessage}\n            </Box>\n          </TableCell>\n          <TableCell sx={{ paddingBottom: 0, paddingTop: 0, width: 40 }} />\n        </TableRow>\n      ) : null}\n    </React.Fragment>\n  );\n};\n\nexport default LogLine;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { IMessageEvent, w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Box, Button, Grid, PageLayout, Select, Table, TableBody } from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { ErrorResponseHandler } from \"../../../../common/types\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { wsProtocol } from \"../../../../utils/wsUtils\";\nimport {\n  logMessageReceived,\n  logResetMessages,\n  setLogsStarted,\n} from \"../logsSlice\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport api from \"../../../../../src/common/api\";\nimport LogLine from \"./LogLine\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../../HelpMenu\";\n\nvar c: any = null;\n\nconst ErrorLogs = () => {\n  const dispatch = useAppDispatch();\n\n  const messages = useSelector((state: AppState) => state.logs.logMessages);\n  const logsStarted = useSelector((state: AppState) => state.logs.logsStarted);\n\n  const [filter, setFilter] = useState<string>(\"\");\n  const [nodes, setNodes] = useState<string[]>([\"\"]);\n  const [selectedNode, setSelectedNode] = useState<string>(\"all\");\n  const [selectedUserAgent, setSelectedUserAgent] =\n    useState<string>(\"Select user agent\");\n  const [userAgents, setUserAgents] = useState<string[]>([\"All User Agents\"]);\n  const [logType, setLogType] = useState<string>(\"all\");\n  const [loadingNodes, setLoadingNodes] = useState<boolean>(false);\n\n  const startLogs = () => {\n    dispatch(logResetMessages());\n    const url = new URL(window.location.toString());\n    const isDev = process.env.NODE_ENV === \"development\";\n    const port = isDev ? \"9090\" : url.port;\n\n    const wsProt = wsProtocol(url.protocol);\n    // check if we are using base path, if not this always is `/`\n    const baseLocation = new URL(document.baseURI);\n    const baseUrl = baseLocation.pathname;\n\n    c = new W3CWebSocket(\n      `${wsProt}://${\n        url.hostname\n      }:${port}${baseUrl}ws/console/?logType=${logType}&node=${\n        selectedNode === \"Select node\" ? \"\" : selectedNode\n      }`,\n    );\n    let interval: any | null = null;\n    if (c !== null) {\n      c.onopen = () => {\n        console.log(\"WebSocket Client Connected\");\n        dispatch(setLogsStarted(true));\n        c.send(\"ok\");\n        interval = setInterval(() => {\n          c.send(\"ok\");\n        }, 10 * 1000);\n      };\n      c.onmessage = (message: IMessageEvent) => {\n        // console.log(message.data.toString())\n        // FORMAT: 00:35:17 UTC 01/01/2021\n\n        let m: any = JSON.parse(message.data.toString());\n        let isValidEntry = true;\n        if (\n          m.level === \"\" &&\n          m.errKind === \"\" &&\n          //@ts-ignore\n          m.time === \"00:00:00 UTC 01/01/0001\" &&\n          m.ConsoleMsg === \"\" &&\n          m.node === \"\"\n        ) {\n          isValidEntry = false;\n        }\n\n        m.key = Math.random();\n        if (userAgents.indexOf(m.userAgent) < 0 && m.userAgent !== undefined) {\n          userAgents.push(m.userAgent);\n          setUserAgents(userAgents);\n        }\n        if (isValidEntry) {\n          dispatch(logMessageReceived(m));\n        }\n      };\n      c.onclose = () => {\n        clearInterval(interval);\n        console.log(\"connection closed by server\");\n        dispatch(setLogsStarted(false));\n      };\n      return () => {\n        c.close(1000);\n        clearInterval(interval);\n        console.log(\"closing websockets\");\n        dispatch(setLogsStarted(false));\n      };\n    }\n  };\n\n  const stopLogs = () => {\n    if (c !== null && c !== undefined) {\n      c.close(1000);\n      dispatch(setLogsStarted(false));\n    }\n  };\n\n  const filtLow = filter.toLowerCase();\n  let filteredMessages = messages.filter((m) => {\n    if (\n      m.userAgent === selectedUserAgent ||\n      selectedUserAgent === \"All User Agents\" ||\n      selectedUserAgent === \"Select user agent\"\n    ) {\n      if (filter !== \"\") {\n        if (m.ConsoleMsg.toLowerCase().indexOf(filtLow) >= 0) {\n          return true;\n        } else if (\n          m.error &&\n          m.error.source &&\n          m.error.source.filter((x) => {\n            return x.toLowerCase().indexOf(filtLow) >= 0;\n          }).length > 0\n        ) {\n          return true;\n        } else if (\n          m.error &&\n          m.error.message.toLowerCase().indexOf(filtLow) >= 0\n        ) {\n          return true;\n        } else if (m.api && m.api.name.toLowerCase().indexOf(filtLow) >= 0) {\n          return true;\n        }\n        return false;\n      }\n      return true;\n    } else return false;\n  });\n\n  useEffect(() => {\n    setLoadingNodes(true);\n    api\n      .invoke(\"GET\", `/api/v1/nodes`)\n      .then((res: string[]) => {\n        setNodes(res);\n        setLoadingNodes(false);\n      })\n      .catch((err: ErrorResponseHandler) => {\n        setLoadingNodes(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"error_logs\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label=\"Logs\" actions={<HelpMenu />} />\n\n      <PageLayout>\n        <Grid container sx={{ gap: 15 }}>\n          <Grid item xs={3}>\n            {!loadingNodes ? (\n              <Select\n                id=\"node-selector\"\n                name=\"node\"\n                data-test-id=\"node-selector\"\n                value={selectedNode}\n                onChange={(value) => {\n                  setSelectedNode(value as string);\n                }}\n                disabled={loadingNodes || logsStarted}\n                options={[\n                  { label: \"All Nodes\", value: \"all\" },\n                  ...nodes.map((aNode) => ({ label: aNode, value: aNode })),\n                ]}\n              />\n            ) : (\n              <h3> Loading nodes</h3>\n            )}\n          </Grid>\n\n          <Grid item xs={3}>\n            <Select\n              id=\"logType\"\n              name=\"logType\"\n              data-test-id=\"log-type\"\n              value={logType}\n              onChange={(value) => {\n                setLogType(value as string);\n              }}\n              disabled={loadingNodes || logsStarted}\n              options={[\n                { value: \"all\", label: \"All Log Types\" },\n                {\n                  value: \"minio\",\n                  label: \"MinIO\",\n                },\n                { value: \"application\", label: \"Application\" },\n              ]}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            {userAgents.length > 1 && (\n              <Select\n                id=\"userAgent\"\n                name=\"userAgent\"\n                data-test-id=\"user-agent\"\n                value={selectedUserAgent}\n                onChange={(value) => {\n                  setSelectedUserAgent(value as string);\n                }}\n                disabled={userAgents.length < 1 || logsStarted}\n                options={userAgents.map((anAgent) => ({\n                  label: anAgent,\n                  value: anAgent,\n                }))}\n              />\n            )}\n          </Grid>\n          <Grid\n            item\n            xs={2}\n            sx={{ display: \"flex\", justifyContent: \"flex-end\" }}\n          >\n            {!logsStarted && (\n              <Button\n                id={\"start-logs\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                disabled={false}\n                onClick={startLogs}\n                label={\"Start Logs\"}\n              />\n            )}\n            {logsStarted && (\n              <Button\n                id={\"stop-logs\"}\n                type=\"button\"\n                variant=\"callAction\"\n                onClick={stopLogs}\n                label={\"Stop Logs\"}\n              />\n            )}\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\" as const,\n              justifyContent: \"space-between\" as const,\n              alignItems: \"center\",\n              marginBottom: \"1rem\",\n              \"& button\": {\n                flexGrow: 0,\n                marginLeft: 8,\n                marginBottom: 0,\n              },\n            }}\n          >\n            <SearchBox\n              placeholder=\"Filter\"\n              onChange={(e) => {\n                setFilter(e);\n              }}\n              value={filter}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <Box\n              id=\"logs-container\"\n              data-test-id=\"logs-list-container\"\n              sx={{\n                minHeight: 400,\n                height: \"calc(100vh - 200px)\",\n                overflow: \"auto\",\n                fontSize: 13,\n                borderRadius: 4,\n              }}\n            >\n              <Box withBorders customBorderPadding={\"0px\"} useBackground>\n                <Table aria-label=\"collapsible table\">\n                  <TableBody>\n                    {filteredMessages.map((m) => {\n                      return <LogLine log={m} />;\n                    })}\n                  </TableBody>\n                </Table>\n                {filteredMessages.length === 0 && (\n                  <Box sx={{ padding: 20, textAlign: \"center\" }}>\n                    No logs to display\n                  </Box>\n                )}\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ErrorLogs;\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n"],"names":["timestampDisplayFmt","props","log","open","setOpen","useState","getLogLineKey","keyPath","getByKey","logMessage","consoleMsg","errMsg","titleLogMessage","replace","fullMessage","_jsx","Fragment","ConsoleMsg","style","display","tableLayout","width","paddingLeft","paddingRight","children","whiteSpace","textOverflow","overflowX","messageForConsoleMsg","dataStyle","color","fontWeight","fontFamily","fontSize","labelStyle","getLogEntryKey","logTime","DateTime","fromFormat","time","toString","zone","_jsxs","toFormat","error","source","map","e","i","messageForError","dateOfLine","toJSDate","dateStr","getFullYear","React","TableRow","sx","cursor","borderLeft","borderRight","TableCell","onClick","Box","gap","alignItems","marginRight","lineHeight","WarnFilledIcon","errKind","overflow","justifyContent","borderRadius","fill","BoxArrowUp","BoxArrowDown","paddingBottom","paddingTop","textTransform","verticalAlign","textAlign","marginTop","colSpan","margin","padding","withBorders","useBackground","c","ErrorLogs","dispatch","useAppDispatch","messages","useSelector","state","logs","logMessages","logsStarted","filter","setFilter","nodes","setNodes","selectedNode","setSelectedNode","selectedUserAgent","setSelectedUserAgent","userAgents","setUserAgents","logType","setLogType","loadingNodes","setLoadingNodes","filtLow","toLowerCase","filteredMessages","m","userAgent","indexOf","x","length","message","api","name","useEffect","invoke","then","res","catch","err","setHelpName","PageHeaderWrapper","label","actions","HelpMenu","PageLayout","Grid","container","item","xs","Select","id","value","onChange","disabled","options","aNode","anAgent","Button","type","variant","startLogs","logResetMessages","url","URL","window","location","port","wsProt","wsProtocol","protocol","baseUrl","document","baseURI","pathname","W3CWebSocket","concat","hostname","interval","onopen","console","setLogsStarted","send","setInterval","onmessage","JSON","parse","data","isValidEntry","level","node","key","Math","random","undefined","push","logMessageReceived","onclose","clearInterval","close","stopLogs","marginBottom","flexGrow","marginLeft","SearchBox","placeholder","minHeight","height","customBorderPadding","Table","TableBody","LogLine","naiveFallback","self","Error","module","exports","this","globalThis","Object","defineProperty","prototype","get","configurable","__global__","_globalThis","require","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","uri","protocols","forEach","prop"],"sourceRoot":""}