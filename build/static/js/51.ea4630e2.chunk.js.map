{"version":3,"file":"static/js/51.ea4630e2.chunk.js","mappings":"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","sources":["screens/Console/Buckets/BucketDetails/DeleteBucketLifecycleRule.tsx","screens/Console/Buckets/BucketDetails/EditLifecycleConfiguration.tsx","screens/Console/Buckets/BucketDetails/AddLifecycleModal.tsx","screens/Console/Buckets/BucketDetails/BucketLifecyclePanel.tsx","screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useEffect, useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ConfirmDialog from \"../../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteLifecycleRule {\n  deleteOpen: boolean;\n  onCloseAndRefresh: (refresh: boolean) => any;\n  bucket: string;\n  id: string;\n}\n\nconst DeleteBucketLifecycleRule = ({\n  onCloseAndRefresh,\n  deleteOpen,\n  bucket,\n  id,\n}: IDeleteLifecycleRule) => {\n  const dispatch = useAppDispatch();\n  const [deletingRule, setDeletingRule] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (deletingRule) {\n      api.buckets\n        .deleteBucketLifecycleRule(bucket, id)\n        .then(() => {\n          setDeletingRule(false);\n          onCloseAndRefresh(true);\n        })\n        .catch((err) => {\n          setDeletingRule(false);\n          dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [deletingRule, bucket, id, onCloseAndRefresh, dispatch]);\n\n  const onConfirmDelete = () => {\n    setDeletingRule(true);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete Lifecycle Rule`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      isLoading={deletingRule}\n      onConfirm={onConfirmDelete}\n      titleIcon={<ConfirmDeleteIcon />}\n      onClose={() => onCloseAndRefresh(false)}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete the <strong>{id}</strong> rule?\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteBucketLifecycleRule;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  Button,\n  FormLayout,\n  Grid,\n  InputBox,\n  LifecycleConfigIcon,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { api } from \"api\";\nimport { ApiError, Tier } from \"api/consoleApi\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { ITiersDropDown, LifeCycleItem } from \"../types\";\nimport { setErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { errorToHandler } from \"../../../../api/errors\";\n\ninterface IAddUserContentProps {\n  closeModalAndRefresh: (reload: boolean) => void;\n  selectedBucket: string;\n  lifecycleRule: LifeCycleItem;\n  open: boolean;\n}\n\nconst EditLifecycleConfiguration = ({\n  closeModalAndRefresh,\n  selectedBucket,\n  lifecycleRule,\n  open,\n}: IAddUserContentProps) => {\n  const dispatch = useAppDispatch();\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [tags, setTags] = useState<string>(\"\");\n  const [enabled, setEnabled] = useState<boolean>(false);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"transition\" | \"expiry\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  /*To be removed on component replacement*/\n  const formFieldRowFilter = {\n    \"& .MuiPaper-root\": { padding: 0 },\n  };\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  useEffect(() => {\n    if (lifecycleRule.status === \"Enabled\") {\n      setEnabled(true);\n    }\n\n    let transitionMode = false;\n\n    if (lifecycleRule.transition) {\n      if (\n        lifecycleRule.transition.days &&\n        lifecycleRule.transition.days !== 0\n      ) {\n        setTransitionDays(lifecycleRule.transition.days.toString());\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n      if (\n        lifecycleRule.transition.noncurrent_transition_days &&\n        lifecycleRule.transition.noncurrent_transition_days !== 0\n      ) {\n        setNCTransitionDays(\n          lifecycleRule.transition.noncurrent_transition_days.toString(),\n        );\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.transition.date &&\n        lifecycleRule.transition.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"transition\");\n        transitionMode = true;\n      }\n    }\n\n    if (lifecycleRule.expiration) {\n      if (\n        lifecycleRule.expiration.days &&\n        lifecycleRule.expiration.days !== 0\n      ) {\n        setExpiryDays(lifecycleRule.expiration.days.toString());\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n      if (\n        lifecycleRule.expiration.noncurrent_expiration_days &&\n        lifecycleRule.expiration.noncurrent_expiration_days !== 0\n      ) {\n        setNCExpirationDays(\n          lifecycleRule.expiration.noncurrent_expiration_days.toString(),\n        );\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n\n      // Fallback to old rules by date\n      if (\n        lifecycleRule.expiration.date &&\n        lifecycleRule.expiration.date !== \"0001-01-01T00:00:00Z\"\n      ) {\n        setIlmType(\"expiry\");\n        transitionMode = false;\n      }\n    }\n\n    // Transition fields\n    if (transitionMode) {\n      setStorageClass(lifecycleRule.transition?.storage_class || \"\");\n      setNCTransitionDays(\n        lifecycleRule.transition?.noncurrent_transition_days?.toString() || \"0\",\n      );\n      setNCTransitionSC(\n        lifecycleRule.transition?.noncurrent_storage_class || \"\",\n      );\n    } else {\n      // Expiry fields\n      setNCExpirationDays(\n        lifecycleRule.expiration?.noncurrent_expiration_days?.toString() || \"0\",\n      );\n    }\n\n    setExpiredObjectDM(!!lifecycleRule.expiration?.delete_marker);\n    setPrefix(lifecycleRule.prefix || \"\");\n\n    if (lifecycleRule.tags) {\n      const tgs = lifecycleRule.tags.reduce(\n        (stringLab: string, currItem: any, index: number) => {\n          return `${stringLab}${index !== 0 ? \"&\" : \"\"}${currItem.key}=${\n            currItem.value\n          }`;\n        },\n        \"\",\n      );\n\n      setTags(tgs);\n    }\n  }, [lifecycleRule]);\n\n  const saveRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (addLoading) {\n      return;\n    }\n    setAddLoading(true);\n    if (selectedBucket !== null && lifecycleRule !== null) {\n      let rules = {};\n\n      if (ilmType === \"expiry\") {\n        let expiry: { [key: string]: number } = {};\n\n        if (\n          lifecycleRule.expiration?.days &&\n          lifecycleRule.expiration?.days > 0\n        ) {\n          expiry[\"expiry_days\"] = parseInt(expiryDays);\n        }\n        if (lifecycleRule.expiration?.noncurrent_expiration_days) {\n          expiry[\"noncurrentversion_expiration_days\"] =\n            parseInt(NCExpirationDays);\n        }\n\n        rules = {\n          ...expiry,\n        };\n      } else {\n        let transition: { [key: string]: number | string } = {};\n\n        if (\n          lifecycleRule.transition?.days &&\n          lifecycleRule.transition?.days > 0\n        ) {\n          transition[\"transition_days\"] = parseInt(transitionDays);\n          transition[\"storage_class\"] = storageClass;\n        }\n        if (lifecycleRule.transition?.noncurrent_transition_days) {\n          transition[\"noncurrentversion_transition_days\"] =\n            parseInt(NCTransitionDays);\n          transition[\"noncurrentversion_transition_storage_class\"] =\n            NCTransitionSC;\n        }\n\n        rules = {\n          ...transition,\n        };\n      }\n\n      const lifecycleUpdate = {\n        type: ilmType,\n        disable: !enabled,\n        prefix,\n        tags,\n        expired_object_delete_marker: expiredObjectDM,\n        ...rules,\n      };\n\n      api.buckets\n        .updateBucketLifecycle(\n          selectedBucket,\n          lifecycleRule.id,\n          lifecycleUpdate,\n        )\n        .then((res) => {\n          setAddLoading(false);\n          closeModalAndRefresh(true);\n        })\n        .catch(async (eRes) => {\n          setAddLoading(false);\n          const err = (await eRes.json()) as ApiError;\n          dispatch(setErrorSnackMessage(errorToHandler(err)));\n        });\n    }\n  };\n\n  let objectVersion = \"\";\n\n  if (lifecycleRule.expiration) {\n    if (lifecycleRule.expiration.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.expiration.noncurrent_expiration_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  if (lifecycleRule.transition) {\n    if (lifecycleRule.transition.days > 0) {\n      objectVersion = \"Current Version\";\n    } else if (lifecycleRule.transition.noncurrent_transition_days) {\n      objectVersion = \"Non-Current Version\";\n    }\n  }\n\n  return (\n    <ModalWrapper\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      modalOpen={open}\n      title={\"Edit Lifecycle Configuration\"}\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      <form\n        noValidate\n        autoComplete=\"off\"\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n          saveRecord(e);\n        }}\n      >\n        <FormLayout containerPadding={false} withBorders={false}>\n          <Switch\n            label=\"Status\"\n            indicatorLabels={[\"Enabled\", \"Disabled\"]}\n            checked={enabled}\n            value={\"user_enabled\"}\n            id=\"rule_status\"\n            name=\"rule_status\"\n            onChange={(e) => {\n              setEnabled(e.target.checked);\n            }}\n          />\n          <InputBox\n            id=\"id\"\n            name=\"id\"\n            label=\"Id\"\n            value={lifecycleRule.id}\n            onChange={() => {}}\n            disabled\n          />\n          <RadioGroup\n            currentValue={ilmType}\n            id=\"rule_type\"\n            name=\"rule_type\"\n            label=\"Rule Type\"\n            selectorOptions={[\n              { value: \"expiry\", label: \"Expiry\" },\n              { value: \"transition\", label: \"Transition\" },\n            ]}\n            onChange={() => {}}\n            disableOptions\n          />\n\n          <InputBox\n            id=\"object-version\"\n            name=\"object-version\"\n            label=\"Object Version\"\n            value={objectVersion}\n            onChange={() => {}}\n            disabled\n          />\n\n          {ilmType === \"expiry\" && lifecycleRule.expiration?.days && (\n            <InputBox\n              type=\"number\"\n              id=\"expiry_days\"\n              name=\"expiry_days\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setExpiryDays(e.target.value);\n              }}\n              label=\"Expiry Days\"\n              value={expiryDays}\n              min=\"0\"\n            />\n          )}\n\n          {ilmType === \"expiry\" &&\n            lifecycleRule.expiration?.noncurrent_expiration_days && (\n              <InputBox\n                type=\"number\"\n                id=\"noncurrentversion_expiration_days\"\n                name=\"noncurrentversion_expiration_days\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setNCExpirationDays(e.target.value);\n                }}\n                label=\"Non-current Expiration Days\"\n                value={NCExpirationDays}\n                min=\"0\"\n              />\n            )}\n          {ilmType === \"transition\" && lifecycleRule.transition?.days && (\n            <Fragment>\n              <InputBox\n                type=\"number\"\n                id=\"transition_days\"\n                name=\"transition_days\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setTransitionDays(e.target.value);\n                }}\n                label=\"Transition Days\"\n                value={transitionDays}\n                min=\"0\"\n              />\n              <Select\n                label=\"Storage Class\"\n                id=\"storage_class\"\n                name=\"storage_class\"\n                value={storageClass}\n                onChange={(value) => {\n                  setStorageClass(value);\n                }}\n                options={tiersList}\n              />\n            </Fragment>\n          )}\n\n          {ilmType === \"transition\" &&\n            lifecycleRule.transition?.noncurrent_transition_days && (\n              <Fragment>\n                <InputBox\n                  type=\"number\"\n                  id=\"noncurrentversion_transition_days\"\n                  name=\"noncurrentversion_transition_days\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setNCTransitionDays(e.target.value);\n                  }}\n                  label=\"Non-current Transition Days\"\n                  value={NCTransitionDays}\n                  min=\"0\"\n                />\n                <InputBox\n                  id=\"noncurrentversion_t_SC\"\n                  name=\"noncurrentversion_t_SC\"\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                    setNCTransitionSC(e.target.value);\n                  }}\n                  placeholder=\"Set Non-current Version Transition Storage Class\"\n                  label=\"Non-current Version Transition Storage Class\"\n                  value={NCTransitionSC}\n                />\n              </Fragment>\n            )}\n          <Grid item xs={12} sx={formFieldRowFilter}>\n            <Accordion\n              title={\"Filters\"}\n              id={\"lifecycle-filters\"}\n              expanded={expanded}\n              onTitleClick={() => setExpanded(!expanded)}\n            >\n              <InputBox\n                id=\"prefix\"\n                name=\"prefix\"\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setPrefix(e.target.value);\n                }}\n                label=\"Prefix\"\n                value={prefix}\n              />\n              <QueryMultiSelector\n                name=\"tags\"\n                label=\"Tags\"\n                elements={tags}\n                onChange={(vl: string) => {\n                  setTags(vl);\n                }}\n                keyPlaceholder=\"Tag Key\"\n                valuePlaceholder=\"Tag Value\"\n                withBorder\n              />\n            </Accordion>\n          </Grid>\n          {ilmType === \"expiry\" &&\n            lifecycleRule.expiration?.noncurrent_expiration_days && (\n              <Grid item xs={12} sx={formFieldRowFilter}>\n                <Accordion\n                  title={\"Advanced\"}\n                  id={\"lifecycle-advanced-filters\"}\n                  expanded={expandedAdv}\n                  onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                  sx={{ marginTop: 15 }}\n                >\n                  <Switch\n                    value=\"expired_delete_marker\"\n                    id=\"expired_delete_marker\"\n                    name=\"expired_delete_marker\"\n                    checked={expiredObjectDM}\n                    onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                      setExpiredObjectDM(event.target.checked);\n                    }}\n                    label={\"Expired Object Delete Marker\"}\n                  />\n                </Accordion>\n              </Grid>\n            )}\n          <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n            <Button\n              id={\"cancel\"}\n              type=\"button\"\n              variant=\"regular\"\n              disabled={addLoading}\n              onClick={() => {\n                closeModalAndRefresh(false);\n              }}\n              label={\"Cancel\"}\n            />\n            <Button\n              id={\"save\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              color=\"primary\"\n              disabled={addLoading || !isFormValid}\n              label={\"Save\"}\n            />\n          </Grid>\n          {addLoading && (\n            <Grid item xs={12}>\n              <ProgressBar />\n            </Grid>\n          )}\n        </FormLayout>\n      </form>\n    </ModalWrapper>\n  );\n};\n\nexport default EditLifecycleConfiguration;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\n\nimport get from \"lodash/get\";\nimport {\n  Accordion,\n  AlertIcon,\n  Button,\n  FormLayout,\n  Grid,\n  HelpTip,\n  InputBox,\n  LifecycleConfigIcon,\n  ProgressBar,\n  RadioGroup,\n  Select,\n  Switch,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { BucketVersioningResponse, Tier } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { modalStyleUtils } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { selDistSet, setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { ITiersDropDown } from \"../types\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { IAM_PAGES } from \"common/SecureComponent/permissions\";\n\ninterface IReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (refresh: boolean) => any;\n  bucketName: string;\n}\n\nconst AddLifecycleModal = ({\n  open,\n  closeModalAndRefresh,\n  bucketName,\n}: IReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const distributedSetup = useSelector(selDistSet);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [addLoading, setAddLoading] = useState(false);\n  const [versioningInfo, setVersioningInfo] =\n    useState<BucketVersioningResponse | null>(null);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [targetVersion, setTargetVersion] = useState<\"current\" | \"noncurrent\">(\n    \"current\",\n  );\n  const [lifecycleDays, setLifecycleDays] = useState<string>(\"\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [loadingVersioning, setLoadingVersioning] = useState<boolean>(true);\n  const [expandedAdv, setExpandedAdv] = useState<boolean>(false);\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [expiryUnit, setExpiryUnit] = useState<string>(\"days\");\n\n  /*To be removed on component replacement*/\n  const formFieldRowFilter = {\n    \"& .MuiPaper-root\": { padding: 0 },\n  };\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersList()\n        .then((res) => {\n          const tiersList: Tier[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tier: Tier) => {\n              const tierType = tier.type;\n              const value = get(tier, `${tierType}.name`, \"\");\n\n              return { label: value, value: value };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch(() => {\n          setLoadingTiers(false);\n        });\n    }\n  }, [loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    if (!lifecycleDays || parseInt(lifecycleDays) === 0) {\n      valid = false;\n    }\n    if (parseInt(lifecycleDays) > 2147483647) {\n      //values over int32 cannot be parsed\n      valid = false;\n    }\n    setIsFormValid(valid);\n  }, [ilmType, lifecycleDays, storageClass]);\n\n  useEffect(() => {\n    if (loadingVersioning && distributedSetup) {\n      api.buckets\n        .getBucketVersioning(bucketName)\n        .then((res) => {\n          setVersioningInfo(res.data);\n          setLoadingVersioning(false);\n        })\n        .catch((err) => {\n          dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n          setLoadingVersioning(false);\n        });\n    }\n  }, [loadingVersioning, dispatch, bucketName, distributedSetup]);\n\n  const addRecord = () => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry: { [key: string]: number } = {};\n\n      if (targetVersion === \"current\") {\n        expiry[\"expiry_days\"] = parseInt(lifecycleDays);\n      } else if (expiryUnit === \"days\") {\n        expiry[\"noncurrentversion_expiration_days\"] = parseInt(lifecycleDays);\n      } else {\n        expiry[\"newer_noncurrentversion_expiration_versions\"] =\n          parseInt(lifecycleDays);\n      }\n\n      rules = {\n        ...expiry,\n      };\n    } else {\n      let transition: { [key: string]: number | string } = {};\n      if (targetVersion === \"current\") {\n        transition[\"transition_days\"] = parseInt(lifecycleDays);\n        transition[\"storage_class\"] = storageClass;\n      } else if (expiryUnit === \"days\") {\n        transition[\"noncurrentversion_transition_days\"] =\n          parseInt(lifecycleDays);\n        transition[\"noncurrentversion_transition_storage_class\"] = storageClass;\n      }\n\n      rules = {\n        ...transition,\n      };\n    }\n\n    const lifecycleInsert = {\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addBucketLifecycle(bucketName, lifecycleInsert)\n      .then(() => {\n        setAddLoading(false);\n        closeModalAndRefresh(true);\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err)));\n      });\n  };\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Add Lifecycle Rule\"\n      titleIcon={<LifecycleConfigIcon />}\n    >\n      {loadingTiers && (\n        <Grid container>\n          <Grid item xs={12}>\n            <ProgressBar />\n          </Grid>\n        </Grid>\n      )}\n\n      {!loadingTiers && (\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            setAddLoading(true);\n            addRecord();\n          }}\n        >\n          <FormLayout withBorders={false} containerPadding={false}>\n            <RadioGroup\n              currentValue={ilmType}\n              id=\"ilm_type\"\n              name=\"ilm_type\"\n              label=\"Type of Lifecycle\"\n              onChange={(e) => {\n                setIlmType(e.target.value as \"expiry\" | \"transition\");\n              }}\n              selectorOptions={[\n                { value: \"expiry\", label: \"Expiry\" },\n                { value: \"transition\", label: \"Transition\" },\n              ]}\n              helpTip={\n                <Fragment>\n                  Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html\"\n                  >\n                    Expiry\n                  </a>{\" \"}\n                  to delete Objects per this rule. Select{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/transition-objects-to-minio.html\"\n                  >\n                    Transition\n                  </a>{\" \"}\n                  to move Objects to a remote storage{\" \"}\n                  <a\n                    target=\"blank\"\n                    href=\"https://min.io/docs/minio/windows/administration/object-management/transition-objects-to-minio.html#configure-the-remote-storage-tier\"\n                  >\n                    Tier\n                  </a>{\" \"}\n                  per this rule.\n                </Fragment>\n              }\n              helpTipPlacement=\"right\"\n            />\n            {versioningInfo?.status === \"Enabled\" && (\n              <Select\n                value={targetVersion}\n                id=\"object_version\"\n                name=\"object_version\"\n                label=\"Object Version\"\n                onChange={(value) => {\n                  setTargetVersion(value as \"current\" | \"noncurrent\");\n                }}\n                options={[\n                  { value: \"current\", label: \"Current Version\" },\n                  { value: \"noncurrent\", label: \"Non-Current Version\" },\n                ]}\n                helpTip={\n                  <Fragment>\n                    Select whether to apply the rule to current or non-current\n                    Object\n                    <a\n                      target=\"blank\"\n                      href=\"https://min.io/docs/minio/kubernetes/upstream/administration/object-management/create-lifecycle-management-expiration-rule.html#expire-versioned-objects\"\n                    >\n                      {\" \"}\n                      Versions\n                    </a>\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n\n            <InputBox\n              error={\n                lifecycleDays && !isFormValid\n                  ? parseInt(lifecycleDays) <= 0\n                    ? `Number of ${expiryUnit} to retain must be greater than zero`\n                    : parseInt(lifecycleDays) > 2147483647\n                      ? `Number of ${expiryUnit} must be less than or equal to 2147483647`\n                      : \"\"\n                  : \"\"\n              }\n              id=\"expiry_days\"\n              name=\"expiry_days\"\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                if (e.target.validity.valid) {\n                  setLifecycleDays(e.target.value);\n                }\n              }}\n              pattern={\"[0-9]*\"}\n              label=\"After\"\n              value={lifecycleDays}\n              overlayObject={\n                <Fragment>\n                  <Grid container sx={{ justifyContent: \"center\" }}>\n                    <InputUnitMenu\n                      id={\"expire-current-unit\"}\n                      unitSelected={expiryUnit}\n                      unitsList={[\n                        { label: \"Days\", value: \"days\" },\n                        { label: \"Versions\", value: \"versions\" },\n                      ]}\n                      disabled={\n                        targetVersion !== \"noncurrent\" || ilmType !== \"expiry\"\n                      }\n                      onUnitChange={(newValue) => {\n                        setExpiryUnit(newValue);\n                      }}\n                    />\n                    {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n                      <HelpTip\n                        content={\n                          <Fragment>\n                            Select to set expiry by days or newer noncurrent\n                            versions\n                          </Fragment>\n                        }\n                        placement=\"right\"\n                      >\n                        {\" \"}\n                        <AlertIcon style={{ width: 15, height: 15 }} />\n                      </HelpTip>\n                    )}\n                  </Grid>\n                </Fragment>\n              }\n            />\n\n            {ilmType === \"expiry\" ? (\n              <Fragment />\n            ) : (\n              <Select\n                label=\"To Tier\"\n                id=\"storage_class\"\n                name=\"storage_class\"\n                value={storageClass}\n                onChange={(value) => {\n                  setStorageClass(value as string);\n                }}\n                options={tiersList}\n                helpTip={\n                  <Fragment>\n                    Configure a{\" \"}\n                    <a\n                      href={IAM_PAGES.TIERS_ADD}\n                      color=\"secondary\"\n                      style={{ textDecoration: \"underline\" }}\n                    >\n                      remote tier\n                    </a>{\" \"}\n                    to receive transitioned Objects\n                  </Fragment>\n                }\n                helpTipPlacement=\"right\"\n              />\n            )}\n            <Grid item xs={12} sx={formFieldRowFilter}>\n              <Accordion\n                title={\"Filters\"}\n                id={\"lifecycle-filters\"}\n                expanded={expanded}\n                onTitleClick={() => setExpanded(!expanded)}\n              >\n                <Grid item xs={12}>\n                  <InputBox\n                    id=\"prefix\"\n                    name=\"prefix\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setPrefix(e.target.value);\n                    }}\n                    label=\"Prefix\"\n                    value={prefix}\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <QueryMultiSelector\n                    name=\"tags\"\n                    label=\"Tags\"\n                    elements={\"\"}\n                    onChange={(vl: string) => {\n                      setTags(vl);\n                    }}\n                    keyPlaceholder=\"Tag Key\"\n                    valuePlaceholder=\"Tag Value\"\n                    withBorder\n                  />\n                </Grid>\n              </Accordion>\n            </Grid>\n            {ilmType === \"expiry\" && targetVersion === \"noncurrent\" && (\n              <Grid item xs={12} sx={formFieldRowFilter}>\n                <Accordion\n                  title={\"Advanced\"}\n                  id={\"lifecycle-advanced-filters\"}\n                  expanded={expandedAdv}\n                  onTitleClick={() => setExpandedAdv(!expandedAdv)}\n                  sx={{ marginTop: 15 }}\n                >\n                  <Grid item xs={12}>\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expire Delete Marker\"}\n                      description={\n                        \"Remove the reference to the object if no versions are left\"\n                      }\n                    />\n                  </Grid>\n                </Accordion>\n              </Grid>\n            )}\n\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"reset\"}\n                type=\"button\"\n                variant=\"regular\"\n                disabled={addLoading}\n                onClick={() => {\n                  closeModalAndRefresh(false);\n                }}\n                label={\"Cancel\"}\n              />\n              <Button\n                id={\"save-lifecycle\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={addLoading || !isFormValid}\n                label={\"Save\"}\n              />\n            </Grid>\n            {addLoading && (\n              <Grid item xs={12}>\n                <ProgressBar />\n              </Grid>\n            )}\n          </FormLayout>\n        </form>\n      )}\n    </ModalWrapper>\n  );\n};\n\nexport default AddLifecycleModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport get from \"lodash/get\";\nimport {\n  AddIcon,\n  Button,\n  DataTable,\n  Grid,\n  HelpBox,\n  SectionTitle,\n  TiersIcon,\n  HelpTip,\n} from \"mds\";\nimport { useSelector } from \"react-redux\";\nimport { api } from \"api\";\nimport { ObjectBucketLifecycle } from \"api/consoleApi\";\nimport { LifeCycleItem } from \"../types\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../../common/SecureComponent\";\nimport { IAM_SCOPES } from \"../../../../common/SecureComponent/permissions\";\nimport { selBucketDetailsLoading } from \"./bucketDetailsSlice\";\nimport { useParams } from \"react-router-dom\";\nimport { setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport DeleteBucketLifecycleRule from \"./DeleteBucketLifecycleRule\";\nimport EditLifecycleConfiguration from \"./EditLifecycleConfiguration\";\nimport AddLifecycleModal from \"./AddLifecycleModal\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\n\nconst BucketLifecyclePanel = () => {\n  const loadingBucket = useSelector(selBucketDetailsLoading);\n  const params = useParams();\n\n  const [loadingLifecycle, setLoadingLifecycle] = useState<boolean>(true);\n  const [lifecycleRecords, setLifecycleRecords] = useState<\n    ObjectBucketLifecycle[]\n  >([]);\n  const [addLifecycleOpen, setAddLifecycleOpen] = useState<boolean>(false);\n  const [editLifecycleOpen, setEditLifecycleOpen] = useState<boolean>(false);\n  const [selectedLifecycleRule, setSelectedLifecycleRule] =\n    useState<LifeCycleItem | null>(null);\n  const [deleteLifecycleOpen, setDeleteLifecycleOpen] =\n    useState<boolean>(false);\n  const [selectedID, setSelectedID] = useState<string | null>(null);\n  const dispatch = useAppDispatch();\n\n  const bucketName = params.bucketName || \"\";\n\n  const displayLifeCycleRules = hasPermission(bucketName, [\n    IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n    IAM_SCOPES.S3_GET_ACTIONS,\n  ]);\n\n  useEffect(() => {\n    if (loadingBucket) {\n      setLoadingLifecycle(true);\n    }\n  }, [loadingBucket, setLoadingLifecycle]);\n\n  useEffect(() => {\n    dispatch(setHelpName(\"bucket_detail_lifecycle\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (loadingLifecycle) {\n      if (displayLifeCycleRules) {\n        api.buckets\n          .getBucketLifecycle(bucketName)\n          .then((res) => {\n            const records = get(res.data, \"lifecycle\", []);\n            setLifecycleRecords(records || []);\n            setLoadingLifecycle(false);\n          })\n          .catch((err) => {\n            console.error(err.error);\n            setLifecycleRecords([]);\n            setLoadingLifecycle(false);\n          });\n      } else {\n        setLoadingLifecycle(false);\n      }\n    }\n  }, [\n    loadingLifecycle,\n    setLoadingLifecycle,\n    bucketName,\n    displayLifeCycleRules,\n  ]);\n\n  const closeEditLCAndRefresh = (refresh: boolean) => {\n    setEditLifecycleOpen(false);\n    setSelectedLifecycleRule(null);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeAddLCAndRefresh = (refresh: boolean) => {\n    setAddLifecycleOpen(false);\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const closeDelLCRefresh = (refresh: boolean) => {\n    setDeleteLifecycleOpen(false);\n    setSelectedID(null);\n\n    if (refresh) {\n      setLoadingLifecycle(true);\n    }\n  };\n\n  const renderStorageClass = (objectST: any) => {\n    let stClass = get(objectST, \"transition.storage_class\", \"\");\n    stClass = get(objectST, \"transition.noncurrent_storage_class\", stClass);\n\n    return stClass;\n  };\n\n  const lifecycleColumns = [\n    {\n      label: \"Type\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (\n          el.expiration &&\n          (el.expiration.days > 0 ||\n            el.expiration.noncurrent_expiration_days ||\n            (el.expiration.newer_noncurrent_expiration_versions &&\n              el.expiration.newer_noncurrent_expiration_versions > 0))\n        ) {\n          return <span>Expiry</span>;\n        }\n        if (\n          el.transition &&\n          (el.transition.days > 0 || el.transition.noncurrent_transition_days)\n        ) {\n          return <span>Transition</span>;\n        }\n        return <Fragment />;\n      },\n    },\n    {\n      label: \"Version\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>Current</span>;\n          } else if (\n            el.expiration.noncurrent_expiration_days ||\n            el.expiration.newer_noncurrent_expiration_versions\n          ) {\n            return <span>Non-Current</span>;\n          }\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>Current</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>Non-Current</span>;\n          }\n        }\n      },\n    },\n    {\n      label: \"Tier\",\n      elementKey: \"storage_class\",\n      renderFunction: renderStorageClass,\n      renderFullObject: true,\n    },\n    {\n      label: \"Prefix\",\n      elementKey: \"prefix\",\n    },\n    {\n      label: \"After\",\n      renderFullObject: true,\n      renderFunction: (el: LifeCycleItem) => {\n        if (!el) {\n          return <Fragment />;\n        }\n        if (el.transition) {\n          if (el.transition.days > 0) {\n            return <span>{el.transition.days} days</span>;\n          } else if (el.transition.noncurrent_transition_days) {\n            return <span>{el.transition.noncurrent_transition_days} days</span>;\n          }\n        }\n        if (el.expiration) {\n          if (el.expiration.days > 0) {\n            return <span>{el.expiration.days} days</span>;\n          } else if (el.expiration.noncurrent_expiration_days) {\n            return <span>{el.expiration.noncurrent_expiration_days} days</span>;\n          } else {\n            return (\n              <span>\n                {el.expiration.newer_noncurrent_expiration_versions} versions\n              </span>\n            );\n          }\n        }\n      },\n    },\n    {\n      label: \"Status\",\n      elementKey: \"status\",\n    },\n  ];\n\n  const lifecycleActions = [\n    {\n      type: \"view\",\n\n      onClick(valueToSend: any): any {\n        setSelectedLifecycleRule(valueToSend);\n        setEditLifecycleOpen(true);\n      },\n    },\n    {\n      type: \"delete\",\n      onClick(valueToDelete: string): any {\n        setSelectedID(valueToDelete);\n        setDeleteLifecycleOpen(true);\n      },\n      sendOnlyId: true,\n    },\n  ];\n\n  return (\n    <Fragment>\n      {editLifecycleOpen && selectedLifecycleRule && (\n        <EditLifecycleConfiguration\n          open={editLifecycleOpen}\n          closeModalAndRefresh={closeEditLCAndRefresh}\n          selectedBucket={bucketName}\n          lifecycleRule={selectedLifecycleRule}\n        />\n      )}\n      {addLifecycleOpen && (\n        <AddLifecycleModal\n          open={addLifecycleOpen}\n          bucketName={bucketName}\n          closeModalAndRefresh={closeAddLCAndRefresh}\n        />\n      )}\n      {deleteLifecycleOpen && selectedID && (\n        <DeleteBucketLifecycleRule\n          id={selectedID}\n          bucket={bucketName}\n          deleteOpen={deleteLifecycleOpen}\n          onCloseAndRefresh={closeDelLCRefresh}\n        />\n      )}\n      <SectionTitle\n        separator\n        sx={{ marginBottom: 15 }}\n        actions={\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_PUT_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_PUT_ACTIONS,\n            ]}\n            resource={bucketName}\n            matchAll\n            errorProps={{ disabled: true }}\n          >\n            <TooltipWrapper tooltip={\"Add Lifecycle Rule\"}>\n              <Button\n                id={\"add-bucket-lifecycle-rule\"}\n                onClick={() => {\n                  setAddLifecycleOpen(true);\n                }}\n                label={\"Add Lifecycle Rule\"}\n                icon={<AddIcon />}\n                variant={\"callAction\"}\n              />\n            </TooltipWrapper>\n          </SecureComponent>\n        }\n      >\n        <HelpTip\n          content={\n            <Fragment>\n              MinIO derives it’s behavior and syntax from{\" \"}\n              <a\n                target=\"blank\"\n                href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html\"\n              >\n                S3 lifecycle\n              </a>{\" \"}\n              for compatibility in migrating workloads and lifecycle rules from\n              S3 to MinIO.\n            </Fragment>\n          }\n          placement=\"right\"\n        >\n          Lifecycle Rules\n        </HelpTip>\n      </SectionTitle>\n      <Grid container>\n        <Grid item xs={12}>\n          <SecureComponent\n            scopes={[\n              IAM_SCOPES.S3_GET_LIFECYCLE_CONFIGURATION,\n              IAM_SCOPES.S3_GET_ACTIONS,\n            ]}\n            resource={bucketName}\n            errorProps={{ disabled: true }}\n          >\n            <DataTable\n              itemActions={lifecycleActions}\n              columns={lifecycleColumns}\n              isLoading={loadingLifecycle}\n              records={lifecycleRecords}\n              entityName=\"Lifecycle\"\n              customEmptyMessage=\"There are no Lifecycle rules yet\"\n              idField=\"id\"\n              customPaperHeight={\"400px\"}\n            />\n          </SecureComponent>\n        </Grid>\n        {!loadingLifecycle && (\n          <Grid item xs={12}>\n            <br />\n            <HelpBox\n              title={\"Lifecycle Rules\"}\n              iconComponent={<TiersIcon />}\n              help={\n                <Fragment>\n                  MinIO Object Lifecycle Management allows creating rules for\n                  time or date based automatic transition or expiry of objects.\n                  For object transition, MinIO automatically moves the object to\n                  a configured remote storage tier.\n                  <br />\n                  <br />\n                  You can learn more at our{\" \"}\n                  <a\n                    href=\"https://min.io/docs/minio/linux/administration/object-management/object-lifecycle-management.html?ref=con\"\n                    target=\"_blank\"\n                    rel=\"noopener\"\n                  >\n                    documentation\n                  </a>\n                  .\n                </Fragment>\n              }\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default BucketLifecyclePanel;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["_ref","onCloseAndRefresh","deleteOpen","bucket","id","dispatch","useAppDispatch","deletingRule","setDeletingRule","useState","useEffect","api","buckets","deleteBucketLifecycleRule","then","catch","err","setErrorSnackMessage","errorToHandler","error","_jsx","ConfirmDialog","title","confirmText","isOpen","isLoading","onConfirm","onConfirmDelete","titleIcon","ConfirmDeleteIcon","onClose","confirmationContent","_jsxs","Fragment","children","_lifecycleRule$expira7","_lifecycleRule$expira8","_lifecycleRule$transi8","_lifecycleRule$transi9","_lifecycleRule$expira9","closeModalAndRefresh","selectedBucket","lifecycleRule","open","loadingTiers","setLoadingTiers","addLoading","setAddLoading","tags","setTags","enabled","setEnabled","tiersList","setTiersList","prefix","setPrefix","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","expandedAdv","setExpandedAdv","expanded","setExpanded","formFieldRowFilter","padding","admin","res","get","data","length","objList","map","tier","tierType","type","value","concat","label","valid","_lifecycleRule$expira3","status","transitionMode","_lifecycleRule$transi","_lifecycleRule$transi2","_lifecycleRule$transi3","_lifecycleRule$transi4","_lifecycleRule$expira","_lifecycleRule$expira2","transition","days","toString","noncurrent_transition_days","date","expiration","noncurrent_expiration_days","storage_class","noncurrent_storage_class","delete_marker","tgs","reduce","stringLab","currItem","index","key","objectVersion","ModalWrapper","modalOpen","LifecycleConfigIcon","noValidate","autoComplete","onSubmit","e","event","preventDefault","rules","_lifecycleRule$expira4","_lifecycleRule$expira5","_lifecycleRule$expira6","expiry","parseInt","_lifecycleRule$transi5","_lifecycleRule$transi6","_lifecycleRule$transi7","lifecycleUpdate","disable","expired_object_delete_marker","updateBucketLifecycle","async","eRes","json","saveRecord","FormLayout","containerPadding","withBorders","Switch","indicatorLabels","checked","name","onChange","target","InputBox","disabled","RadioGroup","currentValue","selectorOptions","disableOptions","min","Select","options","placeholder","Grid","item","xs","sx","Accordion","onTitleClick","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","marginTop","modalStyleUtils","modalButtonBar","Button","variant","onClick","color","ProgressBar","bucketName","distributedSetup","useSelector","selDistSet","versioningInfo","setVersioningInfo","targetVersion","setTargetVersion","lifecycleDays","setLifecycleDays","loadingVersioning","setLoadingVersioning","expiryUnit","setExpiryUnit","getBucketVersioning","setModalErrorSnackMessage","container","addRecord","lifecycleInsert","addBucketLifecycle","helpTip","href","helpTipPlacement","validity","pattern","overlayObject","justifyContent","InputUnitMenu","unitSelected","unitsList","onUnitChange","newValue","HelpTip","content","placement","AlertIcon","style","width","height","IAM_PAGES","TIERS_ADD","textDecoration","description","BucketLifecyclePanel","loadingBucket","selBucketDetailsLoading","params","useParams","loadingLifecycle","setLoadingLifecycle","lifecycleRecords","setLifecycleRecords","addLifecycleOpen","setAddLifecycleOpen","editLifecycleOpen","setEditLifecycleOpen","selectedLifecycleRule","setSelectedLifecycleRule","deleteLifecycleOpen","setDeleteLifecycleOpen","selectedID","setSelectedID","displayLifeCycleRules","hasPermission","IAM_SCOPES","S3_GET_LIFECYCLE_CONFIGURATION","S3_GET_ACTIONS","setHelpName","getBucketLifecycle","records","console","lifecycleColumns","renderFullObject","renderFunction","el","newer_noncurrent_expiration_versions","elementKey","objectST","stClass","lifecycleActions","valueToSend","valueToDelete","sendOnlyId","EditLifecycleConfiguration","refresh","AddLifecycleModal","DeleteBucketLifecycleRule","SectionTitle","separator","marginBottom","actions","SecureComponent","scopes","S3_PUT_LIFECYCLE_CONFIGURATION","S3_PUT_ACTIONS","resource","matchAll","errorProps","TooltipWrapper","tooltip","icon","AddIcon","DataTable","itemActions","columns","entityName","customEmptyMessage","idField","customPaperHeight","HelpBox","iconComponent","TiersIcon","help","rel","UnitMenuButton","styled","button","theme","border","borderRadius","backgroundColor","fontSize","_ref2","anchorEl","setAnchorEl","React","Boolean","handleClose","newUnit","undefined","currentTarget","DropdownSelector","selectedOption","onSelect","hideTriggerAction","anchorOrigin","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","split","keys","values","forEach","element","splittedVals","push","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","className","overlayIcon","overlayAction","addEmptyLine","trim","keysList","valuesList","display","alignSelf","margin","fontWeight","InputLabel","Box","marginLeft","alignItems","Tooltip","HelpIcon","overflowY","position","ref"],"sourceRoot":""}