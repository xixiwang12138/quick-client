{"version":3,"file":"static/js/3138.82b73d53.chunk.js","mappings":"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","sources":["screens/Console/KMS/ImportKey.tsx","screens/Console/KMS/KMSHelpbox.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  AddAccessRuleIcon,\n  BackLink,\n  Button,\n  CodeEditor,\n  FormLayout,\n  Grid,\n  InputBox,\n  PageLayout,\n} from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { modalStyleUtils } from \"../Common/FormComponents/common/styleLibrary\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport KMSHelpBox from \"./KMSHelpbox\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nexport const emptyContent = '{\\n    \"bytes\": \"\"\\n}';\n\nconst ImportKey = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const onSuccess = () => navigate(`${IAM_PAGES.KMS_KEYS}`);\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  const [loading, invokeApi] = useApi(onSuccess, onError);\n  const [keyName, setKeyName] = useState<string>(\"\");\n  const [keyContent, setKeyContent] = useState<string>(emptyContent);\n\n  const importRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    let data = JSON.parse(keyContent);\n    invokeApi(\"POST\", `/api/v1/kms/keys/${keyName}/import`, data);\n  };\n\n  const resetForm = () => {\n    setKeyName(\"\");\n    setKeyContent(\"\");\n  };\n\n  const validateKeyName = (keyName: string) => {\n    if (keyName.indexOf(\" \") !== -1) {\n      return \"Key name cannot contain spaces\";\n    } else return \"\";\n  };\n\n  const validSave = keyName.trim() !== \"\" && keyName.indexOf(\" \") === -1;\n\n  useEffect(() => {\n    dispatch(setHelpName(\"import_key\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <BackLink\n              onClick={() => navigate(IAM_PAGES.KMS_KEYS)}\n              label={\"Keys\"}\n            />\n          }\n          actions={<HelpMenu />}\n        />\n        <PageLayout>\n          <FormLayout\n            title={\"Import Key\"}\n            icon={<AddAccessRuleIcon />}\n            helpBox={\n              <KMSHelpBox\n                helpText={\"Encryption Key\"}\n                contents={[\n                  \"Import a cryptographic key in the Key Management Service server connected to MINIO.\",\n                ]}\n              />\n            }\n          >\n            <form\n              noValidate\n              autoComplete=\"off\"\n              onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n                importRecord(e);\n              }}\n            >\n              <InputBox\n                id=\"key-name\"\n                name=\"key-name\"\n                label=\"Key Name\"\n                autoFocus={true}\n                value={keyName}\n                error={validateKeyName(keyName)}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setKeyName(e.target.value);\n                }}\n              />\n              <CodeEditor\n                label={\"Set key Content\"}\n                value={keyContent}\n                onChange={(value) => {\n                  setKeyContent(value);\n                }}\n                editorHeight={\"350px\"}\n              />\n              <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n                <Button\n                  id={\"clear\"}\n                  type=\"button\"\n                  variant=\"regular\"\n                  onClick={resetForm}\n                  label={\"Clear\"}\n                />\n\n                <Button\n                  id={\"import-key\"}\n                  type=\"submit\"\n                  variant=\"callAction\"\n                  color=\"primary\"\n                  disabled={loading || !validSave}\n                  label={\"Import\"}\n                />\n              </Grid>\n            </form>\n          </FormLayout>\n        </PageLayout>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default ImportKey;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { HelpBox, HelpIconFilled, Box } from \"mds\";\n\ninterface IKMSHelpBoxProps {\n  helpText: string;\n  contents: string[];\n}\n\nconst KMSHelpBox = ({ helpText, contents }: IKMSHelpBoxProps) => {\n  return (\n    <HelpBox\n      iconComponent={<HelpIconFilled />}\n      title={helpText}\n      help={\n        <Fragment>\n          {contents.map((content) => (\n            <Box sx={{ paddingBottom: \"20px\" }}>{content}</Box>\n          ))}\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default KMSHelpBox;\n"],"names":["emptyContent","ImportKey","dispatch","useAppDispatch","navigate","useNavigate","loading","invokeApi","useApi","onSuccess","concat","IAM_PAGES","KMS_KEYS","err","setErrorSnackMessage","keyName","setKeyName","useState","keyContent","setKeyContent","validSave","trim","indexOf","useEffect","setHelpName","_jsx","Fragment","children","_jsxs","Grid","item","xs","PageHeaderWrapper","label","BackLink","onClick","actions","HelpMenu","PageLayout","FormLayout","title","icon","AddAccessRuleIcon","helpBox","KMSHelpBox","helpText","contents","noValidate","autoComplete","onSubmit","e","event","preventDefault","data","JSON","parse","importRecord","InputBox","id","name","autoFocus","value","error","validateKeyName","onChange","target","CodeEditor","editorHeight","sx","modalStyleUtils","modalButtonBar","Button","type","variant","resetForm","color","disabled","_ref","HelpBox","iconComponent","HelpIconFilled","help","map","content","Box","paddingBottom"],"sourceRoot":""}