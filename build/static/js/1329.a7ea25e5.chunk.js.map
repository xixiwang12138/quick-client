{"version":3,"file":"static/js/1329.a7ea25e5.chunk.js","mappings":"oMAkCA,MAiDA,EAjDoCA,IAKM,IALL,2BACnCC,EAA0B,WAC1BC,EAAU,IACVC,EAAG,QACHC,GACkCJ,EAClC,MAAMK,GAAWC,EAAAA,EAAAA,OASVC,EAAeC,IAAmBC,EAAAA,EAAAA,IARnBC,IACpBT,GAA2B,GAC3BI,GAASM,EAAAA,EAAAA,KAAsC,IAAhBD,EAAIE,SAAkB,IAEnCC,GAClBR,GAASS,EAAAA,EAAAA,IAAqBD,MAKhC,IAAKV,EACH,OAAO,KAGT,MAIMY,EAAsB,MAARZ,EAAc,UAAYA,EAE9C,OACEa,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,UAAAC,OAAYJ,GACjBK,YAAa,SACbC,OAAQnB,EACRoB,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,IAAiB,IAC7BC,UAAWjB,EACXkB,UAboBC,KACtBlB,EAAgB,SAAS,eAADW,OAAiBf,EAAO,KAAAe,OAAIhB,GAAM,EAaxDwB,QAtBYA,IAAM1B,GAA2B,GAuB7C2B,mBAAoB,CAClBC,SAAUtB,GAEZuB,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CAAC,wCAC4BjB,EAAAA,EAAAA,KAAA,KAAAiB,SAAIlB,IAAiB,IAAI,mBAC9CC,EAAAA,EAAAA,KAAA,aAGnB,C,yNCtCN,MAiLA,EAjL0BhB,IAA0C,IAAzC,QAAEI,GAAiCJ,EAC5D,MAAMK,GAAWC,EAAAA,EAAAA,MACX4B,GAAWC,EAAAA,EAAAA,OAEVjC,EAAYkC,IAAiBC,EAAAA,EAAAA,WAAkB,IAC/CC,EAAaC,IAAkBF,EAAAA,EAAAA,UAAiB,KAChDG,EAASC,IAAcJ,EAAAA,EAAAA,WAAkB,IACzCK,EAASC,IAAcN,EAAAA,EAAAA,UAAgB,IAExCO,GAAYC,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACnDC,EAAAA,GAAWC,sBAGPC,GAAUJ,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACjDC,EAAAA,GAAWC,sBAGPE,GAAcL,EAAAA,EAAAA,GAAcC,EAAAA,GAAqB,CACrDC,EAAAA,GAAWC,uBAGbG,EAAAA,EAAAA,YAAU,KACRC,GAAc,GACb,KAEHD,EAAAA,EAAAA,YAAU,KACJX,IACEU,EACFG,EAAAA,EAAIlD,IACDmD,mBAAmBlD,GACnBmD,MAAM7C,IACL+B,GAAW,GACP/B,EAAI8C,KAAKC,SACXd,EACEjC,EAAI8C,KAAKC,QAAQC,KAAKC,IACpBA,EAAEC,KAAkB,MAAXD,EAAEC,KAAe,UAAYD,EAAEC,KACxCD,EAAEE,SAAwB,IAAdF,EAAEE,QAAmB,UAAY,WACtCF,KAGb,IAEDG,OAAOjD,IACN4B,GAAW,GACXpC,GAASS,EAAAA,EAAAA,KAAqBiD,EAAAA,EAAAA,GAAelD,EAAImD,QAAQ,IAG7DvB,GAAW,GAEf,GACC,CAACD,EAASC,EAAYE,EAAYtC,EAAU6C,EAAa9C,IAE5D,MAAMgD,EAAeA,KACnBX,GAAW,EAAK,EAsBZwB,EAAe,CACnB,CACEC,KAAM,OACNC,QAhBgBhE,IAClB,IAAIyD,EAAoB,YAAbzD,EAAIyD,KAAqB,IAAMzD,EAAIyD,KAC9C1B,EAAS,iBAADf,OAAkBf,EAAO,oBAAAe,OAAmByC,GAAO,EAezDQ,sBAAuBA,KAAOnB,GAEhC,CACEiB,KAAM,SACNC,QA3BsBhE,IACxBiC,GAAc,GAEdG,EADApC,EAAc,YAARA,EAAoB,IAAMA,EACb,EAyBjBkE,YAAY,EACZD,sBAAwBjE,IAAiByC,GAAqB,YAARzC,IAS1D,OALAgD,EAAAA,EAAAA,YAAU,KACR9C,GAASiE,EAAAA,EAAAA,IAAY,eAAe,GAEnC,KAGDvC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,CACN/B,IACCc,EAAAA,EAAAA,KAACuD,EAAAA,EAA2B,CAC1BrE,WAAYA,EACZC,IAAKmC,EACLlC,QAASA,EACTH,2BAlC2BuE,UACjCpC,GAAc,GAEVqC,GACFrB,GACF,KAgCEpC,EAAAA,EAAAA,KAAC0D,EAAAA,EAAiB,CAChBC,MAAK,GAAAxD,OAAKf,EAAQwE,cAAa,mBAC/BC,SAAS7D,EAAAA,EAAAA,KAAC8D,EAAAA,EAAQ,OAEpB9D,EAAAA,EAAAA,KAAC+D,EAAAA,IAAU,CAAA9C,UACTF,EAAAA,EAAAA,MAACiD,EAAAA,IAAI,CAACC,WAAS,EAAAhD,SAAA,EACbF,EAAAA,EAAAA,MAACiD,EAAAA,IAAI,CACHE,MAAI,EACJC,GAAI,GACJC,GAAI,IACCC,EAAAA,GAAYA,YACfC,eAAgB,WAChBC,IAAK,GACLtD,SAAA,EAEFjB,EAAAA,EAAAA,KAACwE,EAAAA,EAAe,CACdC,OAAQ,CAAC1C,EAAAA,GAAWC,qBACpB0C,SAAU5C,EAAAA,GACV6C,WAAY,CAAE9D,UAAU,GAAOI,UAE/BjB,EAAAA,EAAAA,KAAC4E,EAAAA,EAAc,CAACC,QAAS,UAAU5D,UACjCjB,EAAAA,EAAAA,KAAC8E,EAAAA,IAAM,CACLC,GAAI,eACJC,QAAQ,UACRC,MAAMjF,EAAAA,EAAAA,KAACkF,EAAAA,IAAW,IAClB/B,QAASA,IAAM1B,GAAW,UAIhCzB,EAAAA,EAAAA,KAACwE,EAAAA,EAAe,CACdC,OAAQ,CAAC1C,EAAAA,GAAWC,qBACpB0C,SAAU5C,EAAAA,GACV6C,WAAY,CAAE9D,UAAU,GAAOI,UAE/BjB,EAAAA,EAAAA,KAAC4E,EAAAA,EAAc,CAACC,QAAO,UAAA1E,OAAYf,EAAO,kBAAiB6B,UACzDjB,EAAAA,EAAAA,KAAC8E,EAAAA,IAAM,CACLC,GAAI,aACJpB,MAAO,uBACPqB,QAAS,aACTC,MAAMjF,EAAAA,EAAAA,KAACmF,EAAAA,IAAO,IACdhC,QAASA,IACPjC,EAAS,iBAADf,OAAkBf,EAAO,sCAM3CY,EAAAA,EAAAA,KAACgE,EAAAA,IAAI,CAACE,MAAI,EAACC,GAAI,GAAGlD,UAChBjB,EAAAA,EAAAA,KAACwE,EAAAA,EAAe,CACdC,OAAQ,CAAC1C,EAAAA,GAAWC,qBACpB0C,SAAU5C,EAAAA,GACV6C,WAAY,CAAE9D,UAAU,GAAOI,UAE/BjB,EAAAA,EAAAA,KAACoF,EAAAA,IAAS,CACRC,YAAapC,EACbqC,QAAS,CACP,CAAE3B,MAAO,OAAQ4B,WAAY,QAC7B,CAAE5B,MAAO,OAAQ4B,WAAY,QAC7B,CAAE5B,MAAO,UAAW4B,WAAY,YAElC/E,UAAWgB,EACXE,QAASA,EACT8D,WAAW,OACXC,QAAQ,oBAMT,EC/Lf,EAJgCC,KACvB1F,EAAAA,EAAAA,KAAC2F,EAAiB,CAACvG,QAAS,U","sources":["screens/Console/IDP/DeleteIDPConfigurationModal.tsx","screens/Console/IDP/IDPConfigurations.tsx","screens/Console/IDP/IDPOpenIDConfigurations.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { ConfirmDeleteIcon } from \"mds\";\nimport {\n  setErrorSnackMessage,\n  setServerNeedsRestart,\n} from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteIDPConfigurationModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  idp: string;\n  idpType: string;\n}\n\nconst DeleteIDPConfigurationModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  idp,\n  idpType,\n}: IDeleteIDPConfigurationModalProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = (res: any) => {\n    closeDeleteModalAndRefresh(true);\n    dispatch(setServerNeedsRestart(res.restart === true));\n  };\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n\n  if (!idp) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `/api/v1/idp/${idpType}/${idp}`);\n  };\n\n  const displayName = idp === \"_\" ? \"Default\" : idp;\n\n  return (\n    <ConfirmDialog\n      title={`Delete ${displayName}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: deleteLoading,\n      }}\n      confirmationContent={\n        <Fragment>\n          Are you sure you want to delete IDP <b>{displayName}</b>{\" \"}\n          configuration? <br />\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteIDPConfigurationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { AddIcon, Button, PageLayout, RefreshIcon, Grid, DataTable } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { api } from \"api\";\nimport { errorToHandler } from \"api/errors\";\nimport { useAppDispatch } from \"../../../store\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_SCOPES,\n} from \"../../../common/SecureComponent/permissions\";\nimport {\n  hasPermission,\n  SecureComponent,\n} from \"../../../common/SecureComponent\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport { actionsTray } from \"../Common/FormComponents/common/styleLibrary\";\nimport TooltipWrapper from \"../Common/TooltipWrapper/TooltipWrapper\";\nimport DeleteIDPConfigurationModal from \"./DeleteIDPConfigurationModal\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\ntype IDPConfigurationsProps = {\n  idpType: string;\n};\n\nconst IDPConfigurations = ({ idpType }: IDPConfigurationsProps) => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [deleteOpen, setDeleteOpen] = useState<boolean>(false);\n  const [selectedIDP, setSelectedIDP] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n  const [records, setRecords] = useState<any[]>([]);\n\n  const deleteIDP = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  const viewIDP = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  const displayIDPs = hasPermission(CONSOLE_UI_RESOURCE, [\n    IAM_SCOPES.ADMIN_CONFIG_UPDATE,\n  ]);\n\n  useEffect(() => {\n    fetchRecords();\n  }, []);\n\n  useEffect(() => {\n    if (loading) {\n      if (displayIDPs) {\n        api.idp\n          .listConfigurations(idpType)\n          .then((res) => {\n            setLoading(false);\n            if (res.data.results) {\n              setRecords(\n                res.data.results.map((r: any) => {\n                  r.name = r.name === \"_\" ? \"Default\" : r.name;\n                  r.enabled = r.enabled === true ? \"Enabled\" : \"Disabled\";\n                  return r;\n                }),\n              );\n            }\n          })\n          .catch((err) => {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(errorToHandler(err.error)));\n          });\n      } else {\n        setLoading(false);\n      }\n    }\n  }, [loading, setLoading, setRecords, dispatch, displayIDPs, idpType]);\n\n  const fetchRecords = () => {\n    setLoading(true);\n  };\n\n  const confirmDeleteIDP = (idp: string) => {\n    setDeleteOpen(true);\n    idp = idp === \"Default\" ? \"_\" : idp;\n    setSelectedIDP(idp);\n  };\n\n  const viewAction = (idp: any) => {\n    let name = idp.name === \"Default\" ? \"_\" : idp.name;\n    navigate(`/identity/idp/${idpType}/configurations/${name}`);\n  };\n\n  const closeDeleteModalAndRefresh = async (refresh: boolean) => {\n    setDeleteOpen(false);\n\n    if (refresh) {\n      fetchRecords();\n    }\n  };\n\n  const tableActions = [\n    {\n      type: \"view\",\n      onClick: viewAction,\n      disableButtonFunction: () => !viewIDP,\n    },\n    {\n      type: \"delete\",\n      onClick: confirmDeleteIDP,\n      sendOnlyId: true,\n      disableButtonFunction: (idp: string) => !deleteIDP || idp === \"Default\",\n    },\n  ];\n\n  useEffect(() => {\n    dispatch(setHelpName(\"idp_configs\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      {deleteOpen && (\n        <DeleteIDPConfigurationModal\n          deleteOpen={deleteOpen}\n          idp={selectedIDP}\n          idpType={idpType}\n          closeDeleteModalAndRefresh={closeDeleteModalAndRefresh}\n        />\n      )}\n      <PageHeaderWrapper\n        label={`${idpType.toUpperCase()} Configurations`}\n        actions={<HelpMenu />}\n      />\n      <PageLayout>\n        <Grid container>\n          <Grid\n            item\n            xs={12}\n            sx={{\n              ...actionsTray.actionsTray,\n              justifyContent: \"flex-end\",\n              gap: 8,\n            }}\n          >\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={\"Refresh\"}>\n                <Button\n                  id={\"refresh-keys\"}\n                  variant=\"regular\"\n                  icon={<RefreshIcon />}\n                  onClick={() => setLoading(true)}\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <TooltipWrapper tooltip={`Create ${idpType} configuration`}>\n                <Button\n                  id={\"create-idp\"}\n                  label={\"Create Configuration\"}\n                  variant={\"callAction\"}\n                  icon={<AddIcon />}\n                  onClick={() =>\n                    navigate(`/identity/idp/${idpType}/configurations/add-idp`)\n                  }\n                />\n              </TooltipWrapper>\n            </SecureComponent>\n          </Grid>\n          <Grid item xs={12}>\n            <SecureComponent\n              scopes={[IAM_SCOPES.ADMIN_CONFIG_UPDATE]}\n              resource={CONSOLE_UI_RESOURCE}\n              errorProps={{ disabled: true }}\n            >\n              <DataTable\n                itemActions={tableActions}\n                columns={[\n                  { label: \"Name\", elementKey: \"name\" },\n                  { label: \"Type\", elementKey: \"type\" },\n                  { label: \"Enabled\", elementKey: \"enabled\" },\n                ]}\n                isLoading={loading}\n                records={records}\n                entityName=\"Keys\"\n                idField=\"name\"\n              />\n            </SecureComponent>\n          </Grid>\n        </Grid>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default IDPConfigurations;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React from \"react\";\nimport IDPConfigurations from \"./IDPConfigurations\";\n\nconst IDPOpenIDConfigurations = () => {\n  return <IDPConfigurations idpType={\"openid\"} />;\n};\n\nexport default IDPOpenIDConfigurations;\n"],"names":["_ref","closeDeleteModalAndRefresh","deleteOpen","idp","idpType","dispatch","useAppDispatch","deleteLoading","invokeDeleteApi","useApi","res","setServerNeedsRestart","restart","err","setErrorSnackMessage","displayName","_jsx","ConfirmDialog","title","concat","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onConfirmDelete","onClose","confirmButtonProps","disabled","confirmationContent","_jsxs","Fragment","children","navigate","useNavigate","setDeleteOpen","useState","selectedIDP","setSelectedIDP","loading","setLoading","records","setRecords","deleteIDP","hasPermission","CONSOLE_UI_RESOURCE","IAM_SCOPES","ADMIN_CONFIG_UPDATE","viewIDP","displayIDPs","useEffect","fetchRecords","api","listConfigurations","then","data","results","map","r","name","enabled","catch","errorToHandler","error","tableActions","type","onClick","disableButtonFunction","sendOnlyId","setHelpName","DeleteIDPConfigurationModal","async","refresh","PageHeaderWrapper","label","toUpperCase","actions","HelpMenu","PageLayout","Grid","container","item","xs","sx","actionsTray","justifyContent","gap","SecureComponent","scopes","resource","errorProps","TooltipWrapper","tooltip","Button","id","variant","icon","RefreshIcon","AddIcon","DataTable","itemActions","columns","elementKey","entityName","idField","IDPOpenIDConfigurations","IDPConfigurations"],"sourceRoot":""}