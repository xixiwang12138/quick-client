{"version":3,"file":"static/js/2032.151b5df1.chunk.js","mappings":"iNAgCA,MAmEA,EAnEuBA,IAMM,IANL,2BACtBC,EAA0B,WAC1BC,EAAU,aACVC,EAAY,SACZC,EAAQ,QACRC,GACqBL,EACrB,MAAMM,GAAWC,EAAAA,EAAAA,OAMVC,EAAeC,IAAmBC,EAAAA,EAAAA,IALpBC,IAAMV,GAA2B,KAClCW,GAClBN,GAASO,EAAAA,EAAAA,IAAqBD,OAIzBE,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,IAE3C,IAAKb,EACH,OAAO,KAOT,OACEc,EAAAA,EAAAA,KAACC,EAAAA,EAAa,CACZC,MAAK,UAAAC,OAAYf,GACjBgB,YAAa,SACbC,OAAQpB,EACRqB,WAAWN,EAAAA,EAAAA,KAACO,EAAAA,IAAiB,IAC7BC,UAAWjB,EACXkB,UAXoBC,KACtBlB,EAAgB,SAAS,GAADW,OAAKhB,GAAQgB,OAAGjB,GAAe,EAWrDyB,QArBYA,IAAM3B,GAA2B,GAsB7C4B,mBAAoB,CAClBC,SAAUhB,IAAcX,GAAgBK,GAE1CuB,qBACEC,EAAAA,EAAAA,MAACC,EAAAA,SAAQ,CAAAC,SAAA,EACPjB,EAAAA,EAAAA,KAACkB,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGH,UAChBjB,EAAAA,EAAAA,KAACqB,EAAAA,IAAkB,CACjBC,QAAS,QACTpB,MAAO,UACPqB,QACE,4KAEFC,GAAI,CAAEC,OAAQ,cAEX,4BACiBzB,EAAAA,EAAAA,KAAA,KAAAiB,SAAI/B,IAAiB,gBAC7Cc,EAAAA,EAAAA,KAACkB,EAAAA,IAAI,CAACC,MAAI,EAACC,GAAI,GAAGH,UAChBjB,EAAAA,EAAAA,KAAC0B,EAAAA,IAAQ,CACPC,GAAG,aACHC,KAAK,aACLC,SAAWC,IACThC,EAAagC,EAAMC,OAAOC,MAAM,EAElCC,QAAUC,GAAMA,EAAEC,iBAClBC,MAAM,GACNJ,MAAOnC,UAKf,C","sources":["screens/Console/KMS/DeleteKMSModal.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState, Fragment } from \"react\";\nimport { ConfirmDeleteIcon, Grid, InformativeMessage, InputBox } from \"mds\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport ConfirmDialog from \"../Common/ModalWrapper/ConfirmDialog\";\n\ninterface IDeleteKMSModalProps {\n  closeDeleteModalAndRefresh: (refresh: boolean) => void;\n  deleteOpen: boolean;\n  selectedItem: string;\n  endpoint: string;\n  element: string;\n}\n\nconst DeleteKMSModal = ({\n  closeDeleteModalAndRefresh,\n  deleteOpen,\n  selectedItem,\n  endpoint,\n  element,\n}: IDeleteKMSModalProps) => {\n  const dispatch = useAppDispatch();\n  const onDelSuccess = () => closeDeleteModalAndRefresh(true);\n  const onDelError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n  const onClose = () => closeDeleteModalAndRefresh(false);\n\n  const [deleteLoading, invokeDeleteApi] = useApi(onDelSuccess, onDelError);\n  const [retypeKey, setRetypeKey] = useState(\"\");\n\n  if (!selectedItem) {\n    return null;\n  }\n\n  const onConfirmDelete = () => {\n    invokeDeleteApi(\"DELETE\", `${endpoint}${selectedItem}`);\n  };\n\n  return (\n    <ConfirmDialog\n      title={`Delete ${element}`}\n      confirmText={\"Delete\"}\n      isOpen={deleteOpen}\n      titleIcon={<ConfirmDeleteIcon />}\n      isLoading={deleteLoading}\n      onConfirm={onConfirmDelete}\n      onClose={onClose}\n      confirmButtonProps={{\n        disabled: retypeKey !== selectedItem || deleteLoading,\n      }}\n      confirmationContent={\n        <Fragment>\n          <Grid item xs={12}>\n            <InformativeMessage\n              variant={\"error\"}\n              title={\"WARNING\"}\n              message={\n                \"Please note that this is a dangerous operation. Once a key has been deleted all data that has been encrypted with it cannot be decrypted anymore, and therefore, is lost.\"\n              }\n              sx={{ margin: \"15px 0\" }}\n            />\n          </Grid>\n          To continue please type <b>{selectedItem}</b> in the box.\n          <Grid item xs={12}>\n            <InputBox\n              id=\"retype-key\"\n              name=\"retype-key\"\n              onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n                setRetypeKey(event.target.value);\n              }}\n              onPaste={(e) => e.preventDefault()}\n              label=\"\"\n              value={retypeKey}\n            />\n          </Grid>\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default DeleteKMSModal;\n"],"names":["_ref","closeDeleteModalAndRefresh","deleteOpen","selectedItem","endpoint","element","dispatch","useAppDispatch","deleteLoading","invokeDeleteApi","useApi","onDelSuccess","err","setErrorSnackMessage","retypeKey","setRetypeKey","useState","_jsx","ConfirmDialog","title","concat","confirmText","isOpen","titleIcon","ConfirmDeleteIcon","isLoading","onConfirm","onConfirmDelete","onClose","confirmButtonProps","disabled","confirmationContent","_jsxs","Fragment","children","Grid","item","xs","InformativeMessage","variant","message","sx","margin","InputBox","id","name","onChange","event","target","value","onPaste","e","preventDefault","label"],"sourceRoot":""}