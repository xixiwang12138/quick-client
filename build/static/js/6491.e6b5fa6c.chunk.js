"use strict";(self.webpackChunkweb_app=self.webpackChunkweb_app||[]).push([[6491],{37099:(e,i,t)=>{t.d(i,{Z:()=>a});var r=t(72791),n=t(29945),o=t(80184);const l=e=>{let{icon:i,description:t}=e;return(0,o.jsxs)(n.xuv,{sx:{display:"flex","& .min-icon":{marginRight:"10px",height:"23px",width:"23px",marginBottom:"10px"}},children:[i," ",(0,o.jsx)("div",{style:{fontSize:"14px",fontStyle:"italic",color:"#5E5E5E"},children:t})]})},a=e=>{let{helpText:i,docLink:t,docText:a,contents:s}=e;return(0,o.jsxs)(n.xuv,{sx:{flex:1,border:"1px solid #eaeaea",borderRadius:"2px",display:"flex",flexFlow:"column",padding:"20px"},children:[(0,o.jsxs)(n.xuv,{sx:{fontSize:"16px",fontWeight:600,display:"flex",alignItems:"center",marginBottom:"16px",paddingBottom:"20px","& .min-icon":{height:"21px",width:"21px",marginRight:"15px"}},children:[(0,o.jsx)(n.M9A,{}),(0,o.jsx)("div",{children:i})]}),(0,o.jsxs)(n.xuv,{sx:{fontSize:"14px",marginBottom:"15px"},children:[s.map(((e,i)=>(0,o.jsxs)(r.Fragment,{children:[e.icon&&(0,o.jsx)(n.xuv,{sx:{paddingBottom:"20px"},children:(0,o.jsx)(l,{icon:e.icon,description:e.iconDescription})}),(0,o.jsx)(n.xuv,{sx:{paddingBottom:"20px"},children:e.text})]},"feature-item-".concat(i)))),(0,o.jsx)(n.xuv,{sx:{paddingBottom:"20px"},children:(0,o.jsx)("a",{href:t,target:"_blank",rel:"noopener",children:a})})]})]})}},51270:(e,i,t)=>{t.d(i,{Z:()=>c});var r=t(72791),n=t(29945),o=t(87995),l=t(44690),a=t(9505),s=t(23508),d=t(80184);const c=e=>{let{closeDeleteModalAndRefresh:i,deleteOpen:t,idp:c,idpType:p}=e;const u=(0,l.TL)(),[h,x]=(0,a.Z)((e=>{i(!0),u((0,o.cN)(!0===e.restart))}),(e=>u((0,o.Ih)(e))));if(!c)return null;const m="_"===c?"Default":c;return(0,d.jsx)(s.Z,{title:"Delete ".concat(m),confirmText:"Delete",isOpen:t,titleIcon:(0,d.jsx)(n.NvT,{}),isLoading:h,onConfirm:()=>{x("DELETE","/api/v1/idp/".concat(p,"/").concat(c))},onClose:()=>i(!1),confirmButtonProps:{disabled:h},confirmationContent:(0,d.jsxs)(r.Fragment,{children:["Are you sure you want to delete IDP ",(0,d.jsx)("b",{children:m})," ","configuration? ",(0,d.jsx)("br",{})]})})}},6491:(e,i,t)=>{t.r(i),t.d(i,{default:()=>y});var r=t(72791),n=t(56087),o=t(29945),l=t(79979),a=t(57689),s=t(23814),d=t(44690),c=t(87995),p=t(81207),u=t(9505),h=t(51270),x=t(79844),m=t(61342),f=t(80184);const g=e=>{let{formFields:i,endpoint:t,backLink:n,header:l,idpType:g,icon:b,helpBox:y}=e;const D=(0,d.TL)(),j=(0,a.s0)(),v=(0,a.UO)().idpName,[C,I]=(0,r.useState)(!0),[O,k]=(0,r.useState)(!1),[E,_]=(0,r.useState)({}),[S,w]=(0,r.useState)({}),[q,N]=(0,r.useState)({}),[B,A]=(0,r.useState)({}),[L,P]=(0,r.useState)(!1),[T,U]=(0,r.useState)(!1),[M,R]=(0,r.useState)(!1),[Z,F]=(0,u.Z)((e=>{D((0,c.cN)(!0===e.restart))}),(e=>D((0,c.Ih)(e)))),[z,G]=(0,u.Z)((e=>{k(!O),D((0,c.cN)(!0===e.restart))}),(e=>{D((0,c.Ih)(e))})),Y=(0,r.useCallback)((e=>{let i={},t={},r=0;e.info&&(e.info.forEach((e=>{"enable"===e.key&&k("on"===e.value),e.isEnv&&(t[e.key]="MINIO_IDENTITY_OPENID_".concat(e.key.toUpperCase()).concat("_"!==v?"_".concat(v):""),r++),i[e.key]=e.value})),r>0&&R(!0)),_(i),w(t)}),[v]),K=()=>{L&&Y(B),P(!L)};(0,r.useEffect)((()=>{I(!0)}),[]),(0,r.useEffect)((()=>{const e=()=>{p.Z.invoke("GET","".concat(t).concat(v)).then((e=>{e&&(A(e),Y(e),(e=>{let i={};e.info&&e.info.forEach((e=>{i[e.key]=e.value})),N(i)})(e)),I(!1)})).catch((e=>{D((0,c.Ih)(e)),I(!1)}))};C&&e()}),[D,C,v,t,Y]);const X=()=>{for(const[e,t]of Object.entries(i))if(t.required&&(void 0===E[e]||null===E[e]||""===E[e]))return!1;return!0},H=()=>{_({})};return(0,r.useEffect)((()=>{D((0,c.Sc)("idp_config"))}),[D]),(0,f.jsxs)(r.Fragment,{children:[T&&v&&(0,f.jsx)(h.Z,{deleteOpen:T,idp:v,idpType:g,closeDeleteModalAndRefresh:async e=>{U(!1),e&&j(n)}}),(0,f.jsxs)(o.rjZ,{item:!0,xs:12,children:[(0,f.jsx)(x.Z,{label:(0,f.jsx)(o.hbI,{onClick:()=>j(n),label:l}),actions:(0,f.jsx)(m.Z,{})}),(0,f.jsxs)(o.Xgh,{children:[(0,f.jsx)(o.UHn,{icon:b,title:"_"===v?"Default":v||"",subTitle:null,actions:(0,f.jsxs)(r.Fragment,{children:["_"!==v&&(0,f.jsx)(o.ua7,{tooltip:M?"This configuration cannot be deleted using this module as this was set using OpenID environment variables.":"",children:(0,f.jsx)(o.zxk,{id:"delete-idp-config",onClick:()=>{U(!0)},label:"Delete Configuration",icon:(0,f.jsx)(o.XHJ,{}),variant:"secondary",disabled:M})}),!L&&(0,f.jsx)(o.ua7,{tooltip:M?"Configuration cannot be edited in this module as OpenID environment variables are set for this MinIO instance.":"",children:(0,f.jsx)(o.zxk,{id:"edit",type:"button",variant:"callAction",icon:(0,f.jsx)(o.dY8,{}),onClick:K,label:"Edit",disabled:M})}),(0,f.jsx)(o.ua7,{tooltip:M?"Configuration cannot be disabled / enabled in this module as OpenID environment variables are set for this MinIO instance.":"",children:(0,f.jsx)(o.zxk,{id:"is-configuration-enabled",onClick:()=>(e=>{const i="enable=".concat(e?"on":"off");G("PUT","".concat(t).concat(v),{input:i})})(!O),label:O?"Disable":"Enable",disabled:z||M})}),(0,f.jsx)(o.zxk,{id:"refresh-idp-config",onClick:()=>I(!0),label:"Refresh",icon:(0,f.jsx)(o.DuK,{})})]}),sx:{marginBottom:15}}),L?(0,f.jsx)(o.ltY,{helpBox:y,children:(0,f.jsx)("form",{noValidate:!0,autoComplete:"off",onSubmit:e=>{(e=>{e.preventDefault();let r="";for(const t of Object.keys(i))(E[t]||E[t]!==q[t])&&(r+="".concat(t,"=").concat(E[t]," "));F("PUT","".concat(t).concat(v),{input:r}),P(!1)})(e)},children:(0,f.jsxs)(o.rjZ,{container:!0,children:[L?(0,f.jsx)(o.rjZ,{item:!0,xs:12,sx:{marginBottom:15},children:(0,f.jsx)(o.KfX,{title:(0,f.jsx)(o.xuv,{style:{display:"flex",justifyContent:"space-between",alignItems:"center",flexGrow:1},children:"Client Secret must be re-entered to change OpenID configurations"}),iconComponent:(0,f.jsx)(o.e6P,{}),help:null})}):null,(0,f.jsxs)(o.rjZ,{xs:12,item:!0,children:[Object.entries(i).map((e=>{let[i,t]=e;return((e,i)=>"toggle"===i.type?(0,f.jsx)(o.rsf,{indicatorLabels:["Enabled","Disabled"],checked:"on"===E[e],value:"is-field-enabled",id:"is-field-enabled",name:"is-field-enabled",label:i.label,tooltip:i.tooltip,onChange:i=>_({...E,[e]:i.target.checked?"on":"off"}),description:"",disabled:!L}):(0,f.jsx)(o.Wzg,{id:e,required:i.required,name:e,label:i.label,tooltip:i.tooltip,error:i.hasError(E[e],L),value:E[e]?E[e]:"",onChange:i=>_({...E,[e]:i.target.value}),placeholder:i.placeholder,disabled:!L,type:i.type}))(i,t)})),(0,f.jsxs)(o.rjZ,{item:!0,xs:12,sx:s.ID.modalButtonBar,children:[L&&(0,f.jsx)(o.zxk,{id:"clear",type:"button",variant:"regular",onClick:H,label:"Clear"}),L&&(0,f.jsx)(o.zxk,{id:"cancel",type:"button",variant:"regular",onClick:K,label:"Cancel"}),L&&(0,f.jsx)(o.zxk,{id:"save-key",type:"submit",variant:"callAction",color:"primary",disabled:C||Z||!X(),label:"Save"})]})]})]})})}):(0,f.jsx)(o.xuv,{withBorders:!0,sx:{display:"grid",gridTemplateColumns:"1fr",gridAutoFlow:"dense",gap:3,padding:"15px",["@media (min-width: ".concat(o.Egj.sm,"px)")]:{gridTemplateColumns:"2fr 1fr",gridAutoFlow:"row"}},children:Object.entries(i).map((e=>{let[i,t]=e;if(!t.editOnly){let e=t.label,r=E[i]?E[i]:"";return"toggle"===t.type&&E[i]&&(r="on"!==r?"Off":"On"),S[i]&&(e=(0,f.jsxs)(o.xuv,{sx:{display:"flex",alignItems:"center",gap:5,"& .min-icon":{height:20,width:20},"& span":{height:20,display:"flex",alignItems:"center"}},children:[(0,f.jsx)("span",{children:t.label}),(0,f.jsx)(o.ua7,{tooltip:"This value is set from the ".concat(S[i]," environment variable"),placement:"right",children:(0,f.jsx)("span",{className:"muted",children:(0,f.jsx)(o.zD0,{})})})]}),r=(0,f.jsx)("i",{children:(0,f.jsx)("span",{className:"muted",children:r})})),(0,f.jsx)(o.kKA,{label:e,value:r},i)}return null}))})]})]})]})};var b=t(37099);const y=()=>(0,f.jsx)(g,{backLink:n.gA.IDP_OPENID_CONFIGURATIONS,header:"OpenID Configurations",endpoint:"/api/v1/idp/openid/",idpType:"openid",helpBox:(0,f.jsx)(b.Z,{helpText:"Learn more about OpenID Connect Configurations",contents:l.f4,docLink:"https://min.io/docs/minio/linux/operations/external-iam.html?ref=con#minio-external-iam-oidc",docText:"Learn more about OpenID Connect Configurations"}),formFields:l.DY,icon:(0,f.jsx)(o.mBM,{width:40})})},79979:(e,i,t)=>{t.d(i,{DY:()=>a,Si:()=>o,f4:()=>l,iR:()=>s});var r=t(29945),n=t(80184);const o=[{text:"MinIO supports using an Active Directory or LDAP (AD/LDAP) service for external management of user identities. Configuring an external IDentity Provider (IDP) enables Single-Sign On (SSO) workflows, where applications authenticate against the external IDP before accessing MinIO.",icon:(0,n.jsx)(r.wXn,{}),iconDescription:"Create Configurations"},{text:"MinIO queries the configured Active Directory / LDAP server to verify the credentials specified by the application and optionally return a list of groups in which the user has membership. MinIO supports two modes (Lookup-Bind Mode and Username-Bind Mode) for performing these queries",icon:null,iconDescription:""},{text:"MinIO recommends using Lookup-Bind mode as the preferred method for verifying AD/LDAP credentials. Username-Bind mode is a legacy method retained for backwards compatibility only.",icon:null,iconDescription:""}],l=[{text:"MinIO supports using an OpenID Connect (OIDC) compatible IDentity Provider (IDP) such as Okta, KeyCloak, Dex, Google, or Facebook for external management of user identities.",icon:(0,n.jsx)(r.mBM,{}),iconDescription:"Create Configurations"},{text:"Configuring an external IDP enables Single-Sign On workflows, where applications authenticate against the external IDP before accessing MinIO.",icon:null,iconDescription:""}],a={config_url:{required:!0,hasError:(e,i)=>!e&&i?"Config URL is required":"",label:"Config URL",tooltip:"Config URL for identity provider configuration",placeholder:"https://identity-provider-url/.well-known/openid-configuration",type:"text",editOnly:!1},client_id:{required:!0,hasError:(e,i)=>!e&&i?"Client ID is required":"",label:"Client ID",tooltip:"Identity provider Client ID",placeholder:"Enter Client ID",type:"text",editOnly:!1},client_secret:{required:!0,hasError:(e,i)=>!e&&i?"Client Secret is required":"",label:"Client Secret",tooltip:"Identity provider Client Secret",placeholder:"Enter Client Secret",type:"password",editOnly:!0},claim_name:{required:!1,label:"Claim Name",tooltip:"Claim from which MinIO will read the policy or role to use",placeholder:"Enter Claim Name",type:"text",hasError:(e,i)=>"",editOnly:!1},display_name:{required:!1,label:"Display Name",tooltip:"",placeholder:"Enter Display Name",type:"text",hasError:(e,i)=>"",editOnly:!1},claim_prefix:{required:!1,label:"Claim Prefix",tooltip:"",placeholder:"Enter Claim Prefix",type:"text",hasError:(e,i)=>"",editOnly:!1},scopes:{required:!1,label:"Scopes",tooltip:"",placeholder:"openid,profile,email",type:"text",hasError:(e,i)=>"",editOnly:!1},redirect_uri:{required:!1,label:"Redirect URI",tooltip:"",placeholder:"https://console-endpoint-url/oauth_callback",type:"text",hasError:(e,i)=>"",editOnly:!1},role_policy:{required:!1,label:"Role Policy",tooltip:"",placeholder:"readonly",type:"text",hasError:(e,i)=>"",editOnly:!1},claim_userinfo:{required:!1,label:"Claim User Info",tooltip:"",placeholder:"Claim User Info",type:"toggle",hasError:(e,i)=>"",editOnly:!1},redirect_uri_dynamic:{required:!1,label:"Redirect URI Dynamic",tooltip:"",placeholder:"Redirect URI Dynamic",type:"toggle",hasError:(e,i)=>"",editOnly:!1}},s={server_insecure:{required:!0,hasError:(e,i)=>!e&&i?"Server Address is required":"",label:"Server Insecure",tooltip:"Disable SSL certificate verification ",placeholder:"myldapserver.com:636",type:"toggle",editOnly:!1},server_addr:{required:!0,hasError:(e,i)=>!e&&i?"Server Address is required":"",label:"Server Address",tooltip:'AD/LDAP server address e.g. "myldapserver.com:636"',placeholder:"myldapserver.com:636",type:"text",editOnly:!1},lookup_bind_dn:{required:!0,hasError:(e,i)=>!e&&i?"Lookup Bind DN is required":"",label:"Lookup Bind DN",tooltip:"DN (Distinguished Name) for LDAP read-only service account used to perform DN and group lookups",placeholder:"cn=admin,dc=min,dc=io",type:"text",editOnly:!1},lookup_bind_password:{required:!0,hasError:(e,i)=>!e&&i?"Lookup Bind Password is required":"",label:"Lookup Bind Password",tooltip:"Password for LDAP read-only service account used to perform DN and group lookups",placeholder:"admin",type:"password",editOnly:!0},user_dn_search_base_dn:{required:!0,hasError:(e,i)=>!e&&i?"User DN Search Base DN is required":"",label:"User DN Search Base",tooltip:"",placeholder:"DC=example,DC=net",type:"text",editOnly:!1},user_dn_search_filter:{required:!0,hasError:(e,i)=>!e&&i?"User DN Search Filter is required":"",label:"User DN Search Filter",tooltip:"",placeholder:"(sAMAcountName=%s)",type:"text",editOnly:!1},group_search_base_dn:{required:!1,hasError:(e,i)=>"",label:"Group Search Base DN",tooltip:"",placeholder:"ou=swengg,dc=min,dc=io",type:"text",editOnly:!1},group_search_filter:{required:!1,hasError:(e,i)=>"",label:"Group Search Filter",tooltip:"",placeholder:"(&(objectclass=groupofnames)(member=%d))",type:"text",editOnly:!1}}}}]);
//# sourceMappingURL=6491.e6b5fa6c.chunk.js.map