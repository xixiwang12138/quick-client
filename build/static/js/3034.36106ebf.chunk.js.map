{"version":3,"file":"static/js/3034.36106ebf.chunk.js","mappings":"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","sources":["screens/Console/KMS/AddKeyForm.tsx","screens/Console/KMS/AddKey.tsx","screens/Console/KMS/KMSHelpbox.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { useState } from \"react\";\nimport {\n  AddAccessRuleIcon,\n  Button,\n  FormLayout,\n  PageLayout,\n  Grid,\n  InputBox,\n} from \"mds\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { modalStyleUtils } from \"../Common/FormComponents/common/styleLibrary\";\nimport useApi from \"../Common/Hooks/useApi\";\nimport KMSHelpBox from \"./KMSHelpbox\";\n\ninterface IAddKeyFormProps {\n  onSuccess: () => void;\n  onError: (err: ErrorResponseHandler) => void;\n}\n\nconst AddKeyForm = ({ onSuccess, onError }: IAddKeyFormProps) => {\n  const [loading, invokeApi] = useApi(onSuccess, onError);\n  const [keyName, setKeyName] = useState<string>(\"\");\n\n  const addRecord = (event: React.FormEvent) => {\n    event.preventDefault();\n    invokeApi(\"POST\", \"/api/v1/kms/keys/\", { key: keyName });\n  };\n\n  const resetForm = () => {\n    setKeyName(\"\");\n  };\n\n  const validateKeyName = (keyName: string) => {\n    if (keyName.indexOf(\" \") !== -1) {\n      return \"Key name cannot contain spaces\";\n    } else return \"\";\n  };\n\n  const validSave = keyName.trim() !== \"\" && keyName.indexOf(\" \") === -1;\n\n  return (\n    <PageLayout>\n      <FormLayout\n        title={\"Create Key\"}\n        icon={<AddAccessRuleIcon />}\n        helpBox={\n          <KMSHelpBox\n            helpText={\"Encryption Key\"}\n            contents={[\n              \"Create a new cryptographic key in the Key Management Service server connected to MINIO.\",\n            ]}\n          />\n        }\n      >\n        <form\n          noValidate\n          autoComplete=\"off\"\n          onSubmit={(e: React.FormEvent<HTMLFormElement>) => {\n            addRecord(e);\n          }}\n        >\n          <Grid container>\n            <Grid item xs={12}>\n              <InputBox\n                id=\"key-name\"\n                name=\"key-name\"\n                label=\"Key Name\"\n                autoFocus={true}\n                value={keyName}\n                error={validateKeyName(keyName)}\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                  setKeyName(e.target.value);\n                }}\n              />\n            </Grid>\n            <Grid item xs={12} sx={modalStyleUtils.modalButtonBar}>\n              <Button\n                id={\"clear\"}\n                type=\"button\"\n                variant=\"regular\"\n                onClick={resetForm}\n                label={\"Clear\"}\n              />\n\n              <Button\n                id={\"save-key\"}\n                type=\"submit\"\n                variant=\"callAction\"\n                color=\"primary\"\n                disabled={loading || !validSave}\n                label={\"Save\"}\n              />\n            </Grid>\n          </Grid>\n        </form>\n      </FormLayout>\n    </PageLayout>\n  );\n};\n\nexport default AddKeyForm;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect } from \"react\";\nimport { BackLink, Grid } from \"mds\";\nimport { useNavigate } from \"react-router-dom\";\nimport { IAM_PAGES } from \"../../../common/SecureComponent/permissions\";\nimport { ErrorResponseHandler } from \"../../../common/types\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../systemSlice\";\nimport { useAppDispatch } from \"../../../store\";\nimport AddKeyForm from \"./AddKeyForm\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nconst AddKey = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const onSuccess = () => navigate(`${IAM_PAGES.KMS_KEYS}`);\n\n  const onError = (err: ErrorResponseHandler) =>\n    dispatch(setErrorSnackMessage(err));\n\n  useEffect(() => {\n    dispatch(setHelpName(\"add_key\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <Grid item xs={12}>\n        <PageHeaderWrapper\n          label={\n            <BackLink\n              label={\"Keys\"}\n              onClick={() => navigate(IAM_PAGES.KMS_KEYS)}\n            />\n          }\n          actions={<HelpMenu />}\n        />\n        <AddKeyForm onError={onError} onSuccess={onSuccess} />\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default AddKey;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2023 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { HelpBox, HelpIconFilled, Box } from \"mds\";\n\ninterface IKMSHelpBoxProps {\n  helpText: string;\n  contents: string[];\n}\n\nconst KMSHelpBox = ({ helpText, contents }: IKMSHelpBoxProps) => {\n  return (\n    <HelpBox\n      iconComponent={<HelpIconFilled />}\n      title={helpText}\n      help={\n        <Fragment>\n          {contents.map((content) => (\n            <Box sx={{ paddingBottom: \"20px\" }}>{content}</Box>\n          ))}\n        </Fragment>\n      }\n    />\n  );\n};\n\nexport default KMSHelpBox;\n"],"names":["_ref","onSuccess","onError","loading","invokeApi","useApi","keyName","setKeyName","useState","validSave","trim","indexOf","_jsx","PageLayout","children","FormLayout","title","icon","AddAccessRuleIcon","helpBox","KMSHelpBox","helpText","contents","noValidate","autoComplete","onSubmit","e","preventDefault","key","_jsxs","Grid","container","item","xs","InputBox","id","name","label","autoFocus","value","error","validateKeyName","onChange","target","sx","modalStyleUtils","modalButtonBar","Button","type","variant","onClick","resetForm","color","disabled","AddKey","dispatch","useAppDispatch","navigate","useNavigate","useEffect","setHelpName","Fragment","PageHeaderWrapper","BackLink","IAM_PAGES","KMS_KEYS","actions","HelpMenu","AddKeyForm","err","setErrorSnackMessage","concat","HelpBox","iconComponent","HelpIconFilled","help","map","content","Box","paddingBottom"],"sourceRoot":""}